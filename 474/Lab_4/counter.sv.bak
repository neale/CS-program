module counter(

	input  [7:0]  buttons,
	input  [3:0]  encoder0,
	input  [3:0]  encoder1,
	input         brightness_clk_2hz, //Actually 500Hz, scale down
	input         clk,
	output [6:0]  segments,
	output [2:0]  select

);

assign       en_n = 0;
logic [15:0] brightness = 4'h0001;
logic [3:0]  digit = 0;
logic [7:0]  pwm_count = 4'h0000;
//brightness
always_ff @posedge brightness_clk_pwm
	begin
	
	if (pwm_count == 250) 
		unique casez (~buttons)
			// count up, check for roll over
			8'b??????01 : 
				if (brightness == 4'h8000)
					brightness =   4'h0001
				else
					brightness = brightness << 1
			// count down, check for roll over
			8'b??????10 :
				if (brightness == 4'h0000)
					brightness =   4'h8000
				else
					brightness = brightness >> 1
			// both buttons at same time, do nothing
			8'b??????11 : brightness = brightness
			// do nothing
			8'b??????00 : brightness = brightness
		endcase
	else
		pwm_count = pwm_count + 1
	end

// encoder state machine
//always_ff @posedge clk0
//
//	begin
//		unique casez(encoder_state)
//
//
//	end

always_comb
	begin
	unique casez(select)
		3'b011 : digit = 0
		3'b001 : digit = 1
		3'b000 : digit = 2
	endcase
	end
	
always_comb
   begin
    unique casez (digit)       //abcdefg
                            
		1 : segments = 7'b0000110; 
		2 : segments = 7'b0100100; 
		3 : segments = 7'b0110000; 
		4 : segments = 7'b0011001; 
		5 : segments = 7'b0010010; 
		6 : segments = 7'b0000010; 
		7 : segments = 7'b1111000; 
		8 : segments = 7'b0000000; 
		9 : segments = 7'b0010000; 
		0 : segments = 7'b1000000; 
						 
	endcase
		end
//pwm 50 MHz
logic [10:0] pwm_count = 4'h0000;
logic [2:0]  select_state = 3'b001;

always_ff @posedge(clk)

	begin
		if (counter == 3000) 
			counter = 0;
			if select_state == 3'b100
				select_state = 3'b001
			else 
				select_state = select_state << 1
		else
			counter = counter + 4'h0001;
	end
	
endmodule

always_comb
	begin
		casez(select_state)
			3'b001  : select = 3'b011
			3'b010  : select = 3'b001
			3'b100  : select = 3'b000
			default : select = 3'b011
		endcase
	end
