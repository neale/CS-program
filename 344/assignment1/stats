#!/bin/bash -e
FLAG=$1
INPUT=$2

if [[ $FLAG != *-r* && $FLAG != *-c* ]] || [[ $# -ne 2 ]]; then 
    echo -e "Usage: stats {-rows|-cols} [file]"
    exit
fi

function check {
    if ! [ -r $INPUT ]; then
        echo Cannot read $INPUT
        return 1
        exit
    fi
}
check
if [[ $FLAG == *-r* ]]; then
    #gets the rows
    LINES=`wc -l test_file | awk '{print $1}'`
    
    echo Average   Median
    cat $INPUT | while read -r line  || [[ -n "$line" ]]; do
        sum=0
        #remove whitespace
        LINE=${line//[[:blank:]]/}
        #assign length to cols
        SUM_ARRAY=`echo $LINE | fold -w1`
        for i in $SUM_ARRAY; do
            let sum=sum+$i
            echo $i >> row.txt
        done
        # write out to files sums and rows #
        SORTED=`cat row.txt | sort -n`
        echo ${SORTED:3:3} >> median.txt
        #echo sum : $sum median ${SORTED:3:3} SORTED: $SORTED
        MEDIAN=${SORTED:3:3}
        AVERAGE=$(echo "$sum/5" | bc -l)
        printf "%.0f\t%d\n" $AVERAGE $MEDIAN 
        rm -rf row.txt
    done
fi

if [[ $FLAG == *-c* ]]; then
    count=0
    while read; do
        ((count++))
    done < $INPUT     
    # assign each column to an element
    for i in $(seq 1 $count); do
        ARR[$i]=`awk '{ print $'$i' }' $INPUT`
    done
    echo Average  Median    
    # loop over each column
    for i in $(seq 1 $count); do
        sum=0
        # save the column into a file 
        echo "${ARR[i]}" >> new.txt
        # breaks column to seperate components for summing 
        SUM_ARRAY=`echo "${ARR[i]}" | fold -w1`
        # add each element and save in sum
        for k in $SUM_ARRAY; do
            let sum=sum+$k
        done
        # use bc for aritmatic 
        AVERAGE=$(echo "$sum/5" | bc -l)
        # sort the saved column numerically
        SORTED=`cat new.txt | sort -n`
        # this is odd so take the farther element
        MEDIAN=${SORTED:6:1}
        # print floating point for rounding
        printf "%.0f\t%d\n" $AVERAGE $MEDIAN
        # clean up
        rm -rf sort.txt col.txt new.txt
    done
fi

