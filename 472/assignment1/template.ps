%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: template.dvi
%%CreationDate: Mon Oct 12 22:13:47 2015
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR17 CMR12 CMBX12 CMR10 CMSY10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter template.dvi -o
%+ template.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.10.12:2213
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 15 /bullet put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC5703711DA090312BA3FC00A08C453C609
C627A8BECD6E1FA14A3B02476E90AAD8B4700C400380BC9AFFBF7847EB28661B
9DC3AA0F44C533F2E07DCC4DE19D367BF223E33DC321D0247A0E6EF6ABC8FA52
15AE044094EF678A8726CD7C011F02BFF8AB6EAEEE391AD837120823BED0B5D8
F8B15245377871A64F78378BB4330149D6941F7A86FBFFC49B93C94155F5FA7D
F22E7214511C0A92693F4CDBF38411651540572F2DD70D924AE0F18E1CD581F3
C871399127FF5D07A868885B5FF7CDEB50B8323B2533DEF8DC973B1AE84FA0A2

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F90A32C4175B6BFB279
024EAE1B04D721A6C54FD62484F8949B2CE9B87D9CEE04DFF82BF14931B3CA03
AA5F701B6F80BBCDF2C427C40A51597F0B1BFA25EDD7CE0EAF2EC676BF0059B7
15DD5462BA30DE78A08DD533DC0E8D85F9DAFC5FD842F417265427E0F1B71834
D2BF6EFAC3CCC40D3EF3B2E2080F148441BA45E5D0C0F7D8416730AF4BE4FC93
1E965594E0364F0D4F1EC48004CEBDDAFB1F0EE0A8222358EAC0F62E6BFA3C9F
46875EB4C999219B91E6147A49A668505667030CDF3495682B79C0F614AAEE68
D976EFCDCB04127C0D7325A2211E49CD316935A0B472D1F9FFC68F7FBEBC7582
036CB393016193A9783DD08D647E89C5BA4EFC8701BCCB6A5C027C4FA8644C06
251B9E33FFEBB1B84AC4D4B148205C8CA7AF5EF97F2788EFB0B71473AD0F5EB4
FC43F46602C53E53F5A6D1E445439F65967C51EAB636178FA377DB2DDE5FEF41
9E91F3BEBCFBD3B4EBB510A0DF7F4D19C6552BC98F10E25612B13E7E67499274
73B30C646208922179B7EDF556602B948DED6C44828FBFBF98843FD61AAC4452
EE1E9B79DB7D4148C1D90B37EF8E7962E77FCB36CF08F0C0176584227E9165C0
556F027DF08BB296077E222CF1FDBA1FA07362A5F377D87D41C8CC50E20C584C
45162582708D056A9180BAEC5CC60E0CF4917DE07617952B35E97F4FE5624CE1
047C153C87C51E80122746ED4917BC8493FA539B98E93F5B9CC9E1F2E3C21556
7154A43D3718005B8C90297F391EC78491040815B827B240E0DDD17A6381B58E
6684573C69724E5B9131348EE7E297194BC830E6DAE532315F27AE9A8FD5EE7A
1D4AB67DBAB8666724C864184A3E80985E10F188AC3A9319A05C31ACF2783E94
A77BB8F88E59B1CDC5E06B180354951802F984D0565C0106F68DE0DA17A5FFAF
79EC5635175EA4A9672C8D725EDC59DC2C6FE7EB74D716E49345B301795BDB2F
3C0A5060E371DED74F77C9514094781C85EF1A70E3E3CF637EC3CC07CC3797D4
261F3754F2DA9D4ECDBC04838BBEBFA54A526B9956AA3B9E89BD29C90C21F1BA
F97464819E641668CB64B378A98BA5F5DF44B52075ADAF195316A18E390AA084
BF84E063EA36DCBCA09AF3EF117C07D61AF33847CED36FD33CF7539004D548A6
E2B63CCD251F4DDE408EACAD47AE4603D858DB9107F86E87E1374894FBD27B57
EDF49EF7512539A4413E3A651F1B98B92F7E066295AE3DC123CD532704738B37
76A3451FE65A47D7D5A58C0C9B5A6474EE65A899E032CC68C1D82DEB84CD9E6A
A209ED0AAA2574C7E3630875D508C65DD8DCFE0B5F87FB1A9C5363DF6ADEEEA9
082B1AB14AF460F0943ACB1A359B3F5CDB81ED289B071A8500A5ECB781876CB7
50A7A62C8A3F555689C1F9D3B03EBCE5D889389453AB0961FA6BDA63B9B9F87A
F8C60BE5014FA86C383A1C9ACC313505986AE90F8F4C7AC0884CCE577A27E777
2542BD820C3E6C05B400494BD813B1FC7851B8CB0332F62744454805E7D19A87
4D920578F597EDFE682887346B740311E91D1ABF1F7693FB160EDFDB4357BF70
17657EEE1D6E5B4D2A075253BE80F43AC74FC01741ADACA4259DEF5EE286E446
571E13CBBFC3178B8E4546CECF02987BE7E52B29A1C5B7409AA952F58CD45C8A
44B13CF48AD23219FB3FE26A0ECDA7165CF183E36B83699D7E8B095DAAE4493D
0736AE04F52CEFF8FEAE7A39E87AF9F2798128DF8DBF2EE04A83F1B7914CACC0
3BBBC8958E3D490802C15EACC6E64106E4879F20178999F07EA0BC635944D018
097C91431AA664ED1407A9A795A7807CE67B53D00C811827AF355047899FD09D
C441D3E73C040E2D06AFACEF4AEA99BB2BF6C845961C3F798123B4F3ED73CF31
C978C38B50913D643B5C88A0117BD007C6C42EC91C36EE8B9178BCE07C90EB9B
25EE88FDBF9A61CCAFCAAB63F86ED8724F7734E748CE13C5BD24B4A101F19092
75D555A0EE722916D6719382E2211978EDD35BC5F6DE3B73768E20AF7D122A4A
3E148CADF508FA1829DF302CB3E7769EAB754A3EB151D3C7E784AEAD629CF5C1
BF43770F77654CD6E181D3736B565FD57118CE6189C92E7F3B2C9928B8B360AC
672E3FDCC255975E0A2B9F3A5D30DECFC39E193011803F845726816AAC3085C8
9B85A9F63A80F7C1DE02186DF0C63C4E940C49F0AAC423DB5070BECD5A539AB1
CD7787EE5E717758EAFBCF1921835B9F3324578FC2E3D409D1793807B3A4606D
22564AAF9BC01BA8592591F1749988CC287CB135A7F7365DC7D8C61AD8A53F46
1A6148208FF26BD08AEC21767EFDFA965413E636DE6F88B7BA655B8DC337AAF8
DC0476C85B65ADEF2CD2F54413A04663CFAE4C6DA015BFEE4EEE1A68F0F9E8DA
C0953BB47024EFD9C9F39D99D4C9101F31048F115720A2CEB33D8B80C4BD538D
A56E1A6352CD1D99D28D7D68E183789A532E404E22E495D8BF2F61044FF09309
1B86285A0D5FFAA5AABB9B10E6E4D92A3AE0C13F06505599D275A7A5312BB237
9A13935FE567730ABB89B4A37D1D627A1665A9ACFBE16DCBA25C037F34EEA634
6FE9C4EF8856121A9FDE50C98E518E1515B3C3B918F9FC3DAD00DAFAC4C7AC35
2B1A6DE47012DFC00724B21662145B6AA7C4A748EAB375FB410354F8EA3C608C
466979410BFE5DC206826E039781B543C3B6FC2C9B8505BCB90333AA9C86E285
576B3448F456A83B4244841F3F70D1151B362217DF1BC5314997BCE3E5F39C64
114B48B839C044A168F8325B783E94D37DA2AA00C5E31E8C80C6ADD4F3D8CD0D
B12B982AF27873281FB10187A4467407211098714302FEFF96E1EDB2A52257C9
9AF7A89CFC4EF75ED0DBE6938EE460916DF22585367E99E68FFD4DB711965C8B
4610617875A8C4E916B6F6C88CE3DDD709A83796E802C729DDF871B9A0D91CAE
983A9BC17366B6EEE019CCD2FD46C1256701B66703C76E6DD9B50A35A98CD49F
5A643F0CE9E34DACA5C264A063E1A531872003DBBD83D3872A310F7919728B05
EFB1E6710F165CB95D34CDDBAE53D0394A7050876D030B2F3950CF70501FDAD3
736D690F2423046FFCD36E0E4737CEC988B1CA381C9ED733A9B3BC4F442562DE
634971E1B6E5882F7F4319D4DEB94E0D74A90BE108C036C98D00E7B26C7209F2
6914242B8FB7AB33602D14003DA4E793416503DAE0B685A4902227D9F2909590
10BB4F93DB74A90CA29126559940D03381FEA1851B2A95351F725F50C0CC73FA
45B6E8A92994B651373BB35D498A0934450DFBB05EDAC886261B62627E22FB9C
B3F9FF93D5F3154932D5997EB66746090949BAB1334CFBE9B93C7FFF093FBA69
BD82603E4F7AC772605C298EA5EBEAF095B3AEF7B85A3A489FE6EB111B756787
A1CA71B70F2CBD4D7CAB97DA7EAD7ADDA7EC40B879840B010FCC23C129DE77C0
71A18594B39913B3B7E0A6EC02B5D26A86944B7A525996B2496D243688F82031
C58ABDC22E4C8348A35165055A97DA20AD79581A127938D44612BDF05F304F99
027E1FD0397299C5BFE313F4D070F975354A6FA76FB6DD87092B08B133C3A19E
5E2ECC9EC60394BC7997F950F00006186EE72F5666431AA56CC959BB432F8602
4E945A8B0D3A0820922953DC1025B228EE5EB085BF58A10B23B8C0B7C4003F76
76AF3BF8BE65EF1C568C1B602AE7FC8DFC26C3AC407FD7D6F33F675AAAB128F3
2447FEADD3D521774F6471E608FAD213B0DB38056A52F60C08F1AC4009C8F6F5
FFBE6DF15D9D18F9541156B1652967B10D8277D0F02E7BCF24441B2B795555C1
C5C2B701EE6338FC799155ED7ECE9E5FA9B5F4BB6BD7F0E713B6C0C7552B3FA1
6C29823D4B38281CF6C634B724E4811B150ACC15E30C2F31928AB1F719F77677
B41E1E88E0132369A909B5CA13C794560832ADA21BC70B6223AC1F03D7ADCB1B
3D22FA89A369C06D3AA6C76F609D0BF334691D7CCC393B4D101E13B63DF8EAC4
7BFA062AA0E3195439CA5B5A15819F606D79DFFC50D311EF4A5A3298AB18DFF5
5FB3F3184E8EE1068D400A9B2845EF4178CC13FDEC7FF88472B5F1576C4AC6EA
D86352C7891F1A4D4F16AB91DD7A65E2B81861908A4B3BB5578FBE1CA0835E5C
3B66927F0720A7281CCD153FEBF94E872EB17EA75D7390B87BCDF2FA86DD7B18
991CE09F0568825F73EB50AED50D0ECD4F587CB7764D9E1A98EE5A228689C276
C1DB98462ECD23DC1C9A7435CC4B8261E7E7F9D3A257ADC81B6194903120B5C3
78BC39B3512698EF97F5E37371D000A7738FFE99DD7D7C61C14A232D15826088
C329F74E0C0E367BF7B385DEFD645F9FF6F68C52EFE27797541B6B07CDBB00BB
B72F0839D58F7368F9C8EEDF05BAABBBBB38962A130949B1B32853647408D0EE
0CED9A1352B551F3043DC16FC664EAE2DA6A22CCF147B2CE7736DD1BF64997D0
70E368B12C9114EB8BF57616797570F460F29883C3B65F9C7E1FBEA0ED56E681
FDDD6A45923C1298E4DF28E2233ADEE821F91543F99EF56A8EF92D70A30452F1
2C1ED3020F49D49BE976ABAF3A219D588169468DF4824F26F8B7D0BC2D9B7223
AD115ABF507BE066E118E6FE945BD8FC4FD997EC50458AFE1726327A98B5B298
EFC2231B9B307E4EF8097972F252517D8E0F314C8B38E62B5B1E8EDE7DD03E4C
1C0A409E05BFCA90D501D80A62F3184A9A80EC4314BCAA08CB2572BD492EBEAA
600423251956047FA1539DF96D7CEB44547222C9F2268496BF369E4830445553
C98F5DE5CA4E51F3346A62E9501BFAA066FB9AE1115EAA1A90C80E5A34D26248
746D9555FD4E8174C2AA411FB7836EC51FF172CF31F98BE02FE47D463C160DB2
FB9C42DA7C97F7D43266DB95D58FC2A7AA3101328BAB92008EE8B530A1E6BFF5
B169F923608F4942AF2B60034F9EF7843C5B39ED15BF83F8F73C45FCEE7F2DD8
544C4F2BC484D7EA8593FAF104E2904A9C554974A2F2CA53F5FD2D6D237F8CFE
8D3E0AF8F61BDCE9DD618B2745E8F042179F3645F2977E1E8602202F741C1514
221E59B77594DB227B924114B53108E8691DED58459DE0D5386B8FDCC8655AB0
262375EA9B8EE7875DCB94869C8217082FA1E334618AB24DFC0B82D0CA76658C
1CEE8E6D4806FC813B6D04D43331F8DAAB9723C1B7C5058686B80FBDC418A895
408BDE6C3BB5FF05C485D79E89483A942E63706E9DCC913B91F1C850BC4B39D9
E9E918C65DB8536FA0FFE189B244E295870B86F7A50F17FBA7427989C831A8BB
95D07D88751474CB19066E5C7F9BAEE83F70003A2E2A280FD0BCF37F8D6679D8
6DDDC34E410CC9EA8CD3AB271266A9E10CAE8DCB454A9292B39D0A57BACD1EBF
DA4AD908FCB3C2042C15186B712294390586CD33238DAA7237EEC23CAD889C5D
A5CCBD2CA988005FFE28A54ACA2BA8044102F23EA18B3001C0CAB5DDFA843B25
95305A20240E775BF92669B72CB1032941C2821818B4E37D53BA0698574F88B9
FF26B9A81A531DA78DD10B01FB51315B785B4E0E5B1D8586F8682E905F818B6F
CDEF2C79467ED4557561B6B4994E5ED07C77F84F4A13692FB9046D719C7A08A8
D781C5CB9EAEB521E5B955F0CD2C7F49484ACFC2FF96351139969BAE5429D913
DC96341692B85D857B7BD74ABA7D1227F8C66D81ECA53F578465E0504BBFFF72
5F8D9916C2FD9694791F53F7AADD89EF4A58F892246BFE746F9E71871E3C308B
D59FAA7820C828A99D7977649CC9090CDB51B7AA6000DF8AC772F0A2428A5F5F
C546DC57CFA6F507B2B84782BA687083726B95813D6B98905382C2A59DFDB7F1
DA58217B0A5B331649D55A2B4260C3A6A3EDD795DA676443EB48224675A9D9FF
D8F2432441796E1F023DB1B2BEA311101DCE1FF5E62780740732CD0BD145624F
D1A1111F108BD9342AD532F83EE7C8CC3ED52FEDC3544F11E1E4F30137ABA41E
50A13970033C83FBAA7C70984E813404257759F90E938E58762E66BDC4B891B9
49E4656732D1BFB4D57E0A9DE566B641194294E49D39F675F9B1BC90324FCF7A
719F251DCF310FF73FE9A27E88392E5CFAAEA111DBFB834A78D9D79CA8ED6151
8D6EFCE9F14CE4992559D976A51AFE3790E2B718F27BA5B133F725D83052EA7D
57857FEE04E3F98DFCD3210D9D2B31C5F5FBB7CE0C1EFEC0CE92798251FFFD29
EE3E2535FCE0324087F5AAA35B973C8990FE138CAB48772F0F3929BE7187220C
6D0547DDF79D317CC5AF99D25382AC33773C86C39C66E8407054908CFB7C3CBD
C39F1765F1B742B4E81633BB8BF5F43DB845A642DABC97696FAE0FC0591CED6C
A071B73F98B73A61350A205B92D4A4D61E7791C2334A00ACDC6724CA1F6F1231
8C63A2258AA3112CBCA559A762D1BB89CC104D4BE600F126F7B3AE43CE3997D5
04C68706B2168D45BFD25FB01CE6EFFEA70A7D6ECB7E8944EAA18D56AFC9D3B6
039285242C75C535F5D67E9F82C31CCF690A1D04FFD1F42BFE0894EF8FBA0791
F9B2F398901499004D09CA8489D729E7A2BFA65426E1B25832107B9E786D9044
CDE89FFAAE031D0C846C91796AB3FB298F0C11980E50E8E50D2975B99C5EADC8
2E4D5F29C7A914BE729ACEA9B1586775B388EB3E55659049D8372CA6ADB73199
E4C2573A04E503A59397C73986DA50CB184FCC622D57EF26C68FB94DDAADC8AE
E70C660FD8AAF2564A3C8EBB334A8A306A01F1EC749D61BC528559AF425518E8
9AC1188AB22A1ACFB713133D33FD627F7F3A2C0B14932442C050AEB72019A3A8
CF0D95BE39036FF84DFB8505036E689AB14B967AB0EA199AE665BD85E0E4777B
CB5C1BAAD91295A808D1F35B76B5C49678AEAA9293D34295AA90B5FD9330912A
1E15C5CF3145318CD426A99ECBFBA108E052DD088C243F8622EFAF840D735302
F119D00858DDD0CC52978475542F247778C52C846D95EAF8D191627A8BF88707
3CA5B3ED2A3C1B308A0F9DC68C57BD245D0958CEA9E401B62F88FC1BE2D675AF
FABFC70FB4A7AA7741E426E1A52F4CBD1B627E01AF2B133B2F0DFD55D7EE9665
86FF840F0AAE2AFD0370A9545AFEBC0FDE119D8AF37067CE5C0D7987962C0D9E
DB24DDF4FD48769E915DD8584606BE38CDA27A026158A0F52D56967A23388485
13882CFE0D2DD6A13C46CD4416DAC8782250C908C9464BF39511C241613F23F1
35CF51ADB5B0F787FF47FCB5615B3D2F4864D89899EB93528F05F668F455402A
533629E20B6B6ED4899E23FA3F3F6F907E41C047C246933EEFC6710821E9E230
7F8A3CE7820901FBACF29ED881C01748FDF6DCEEDDCE807CD4C22F21D716B193
A2A86CF27C9160DE0CBA7CF11204942D14877F78EAEA7AE765310D28F3D2FCB1
FED3323DC7B151E86AA317C7B1CE361953E0072814F58A0C09621AE0EE5F5265
B56EF29E2B2F1BFEBA2A60CBC01D0F3DCACAB258E8EABFE3B91E99BDBC4725DB
797015D0E3B95FB005EBA027E0D96B2FC6C359CA7A260184CBD774992A879478
8CC4708D3EA889FF5D2BE36BDF4BB2E0813C49E359B3C3B99241E75599DBB848
50CD02A077FBF4648B2711A8928028F72A9AFED33B863767851BDB764BE20A46
01D920719342632EA2EC2CB31CBAB97E7A3DA8ACCF45BC302A63C13ED7ED5C96
69FFF7CC77270EF5A08533CDD8C244A3AAC2B39458BF65B514CC97D945ED5E1D
C322EB3452625D49BF163A248FFC3472171EA35DD99F2AF1F06C2661DF5ACED4
B98D298BC3FED163FBCDCA0F4791DDC768E4ED27CEC60354B6B2B81D8C27A05A
F99E94019CDE66A92C3DCF085FA867CAB66742D5C96DB655C3BB9FD306F62A3F
0EAD9C5DA41ECA1A300BA7A1A884F48F18007439F3306A80B4DD2A6C002EA313
0033657BB9D7176E8734ADE55463D1381E0ED954F21215051A57F12F9C1C4AB3
532BF6214D1E05DE64738052CB11222407F676B3303F5990BD2AEBECCD416096
415DC3519BF82A5185E319C697A3063B55010586BA59540D036EE27BA9363EE4
F8FBA5FC4CC4F3ADE65E804F3FB3F24D649C7766785AC1D983C73E080F54827E
3865187F59EB76D51CB653C821EF62BEE622601CC73510F309EECA10855771C4
1E603DB442F66CBF21AFF68B100450516A86050FA4D039E60EC953CB0B9D921B
237B484CC2DED8472AFACE2BCB4564158E29A646D480E129415685F8CC33CD0E
290CD8851F6ED0921143BD1EAC1C63D59116A3EAB7B2A6385D53D1DDD6FB4B71
F4407B30F7AB7C447522ED6ACF165FABFE675BCE216BE5DD1018B083D7C5D63F
167B9901A59C73286139BE6CC9E311747402677B08108CC4A165563548811AC2
03262754E72F0AC4BB80B20A866C93364663E221A6DE84BE4AC2714136105C58
B4BE9723813D0BE554E10945992A442CC9AEA50825F451835B729F0B43449FE4
C4452F1411E2981C494F028B9E14FDE2ABB6ECF48CF9C69E7BBB06140BB0772C
B6553007B3F437A946589134C4657FC818CE6AA8B9B29A0BA11A3CB98C8BE062
7CB472755D38C1C08F627C3B4FE7C82519C23D4E640FEDD2754C173DC2621E8D
56F373AD600DD058752C7CBC940B4F91C77330E92AC1E1D9C98B3EEF47185E78
93C91CCD00C7862B62AACDE5A1ECA5123E319AE8172657AD66C57FD0C253BAF6
799975ADABF10FAD8657323F7A0B959FB5983CA26194DFAFD49C772559743DA0
99B246595879EBCF1E21CD936BDF1377CAAAD5F9C93762D10D20A3C29B374B50
04D366EE11B91ED026ED24008CADEE67D689E252886BE8C6C2DF10171B8CB5E8
82C5C831CF08ABC17B55CC8E196984B73ACC50D87B4C3EF76FB5DEC3174DFD2F
A829B80437654A6FAC6B74865A658729A27C907ADD0DA4C08D107D8617DB0724
4A12D18422527CA3E60B3165D2FFD73141C73CC407ED95DCF639F23E36578175
2A24FF741F56CAFD7757C105F515C3223C16681E7331AAD2CD540E01B72F6F8B
761F21A0747E87FFDB62E2F863527140B46791942D56CA40D093F484748FCE1D
D1B49D80BF5D8A47CBCC605B6028500B953CB1A8078A96FAAF26F8E211CF1B76
A23151CF4BAC6835413586715D13B70650CE43A1036F307ACC99B194AE893E0A
FCBDE057E653B12525F8E83EE8120A4A273169802E0F479EAA651784D08AC889
EA592C55CA648C474024EA446850453820DB9E0AA7ED3278EFAE45D0AC2287EE
6BEE702DFA9D779B6555F5E53D3BEAA6E0C9E4FD80F3F5427EC7D8A38C2FC297
E730EBEFCEAC65510210856CDA34A731211850CD6705B66CA5DA44AB04F64087
7E170D4ABD9A26CEF12E2D404299EE298DB3314ADA2315104871D2B631F70E19
61F5155DC6A3C4D10A9C9B34F5534199F81E3F6C5C9D69FF34CAD17C8EE7E85B
F3FA0F2C8324B598CA812B887CBB1B862989B955BBD1B8E43275861EEF5E182A
46A3383AE297697A104D34619E665424AB6FD0AE08A64307C5A20077182C4F1E
D26E810910AAF82A691BEB893F79D17C3C2AA9858CA643CF4F8F1450E9EA426A
A5B5632F8153E51EE432932DA3C41DA0B7D898F764014C5D946426092E1B429C
423C75D84186EE6A5819B77DBF4EC53FD11CD655CBA224CFEF62A9573C6A11D8
ADD73D2F4E324ACB2011D728AC1457F1D09C95830D19D1DFE0DC79C2FB867C22
000F8ACC4C9FA094B663A0A9A4A46E27E866C41D196366AF683B6EB1B6FF3556
8C70912702F21AB8F03A8481034B588EC1A0232E8255C0EAC4B8D9D211CD5EB5
F3FCB17F0240A6909F2C430E13143DBBC726A2278C4DBF19226C1D31D5872B09
2521EDE3DB28B1874CC2B3EA02F301ECCA95B7B0408ABCB39CE51031BC582F26
412D86B8B7F201132E4E552F3762DE29F03AEC8FBE9516CF1F85A5FE894AACCF
4F6EFB951868B8C64F846FD9E118CDDCA892CE946D589FD3397D003DE0352666
216A739B082CD8D8F5AEED0EE4755D6210AC8A6302701D3358F000FD9484A27F
F8B488430EC1EF028C317C2D75021885222AAE96176CEFFE0C8258A022F6A150
CDACD3A658EE6D71DD83087E3887564049EA3D12E885576696E8F6EF70E5FAF5
FE22E6CB7F4B31D85FC37D2EE4C06F0C88AE0F2CA57FDD04BF61AEC0345C7261
F0DD828C83000FAD87012ADD087210CE43C9634714764669110CB636315BD53D
0F8E1FEFD826F9B4ACF5B6DC67CC9C200587B3EC4EA026F0B5103DAF8673F431
283EA8350396A9F5346480341445A1A555B0C3E091D8FDA09BA647A7E9F68809
351C8F9392D64BFEACD8876AFED88C2684538068754AA3FF8B913373AC444CBF
C4A88B411D2B91D4D3EBDEE05AE207C29276BD092A7FDB9B7E6C1AFD241891CC
8127CB3599CF1B4498373A4514EA48FA2FE86AC4B845765568CED2C1872F9620
9D6FD3820350DA257234FD19C0533A6FB83DE9E770953D160D4D078CF437300E
0D603709E100B75BC35C79A4EC6C68DDF7637687F52CB4DF30D38EBFE4CEDB65
6D520696C277988E78804CFF841EAB5B185ED711817E80D7789754EC07FCBFFC
3B0476844828AA2D5290F4366333225F6D2DAF3B44574590A40FC9AFF28AE618
CD912FBD40C907084115F7000418AD9EBF4DF5E56C278DFCAB070FA9F600C87D
37151DED34B57E9F3CC0B7E9661EBA1A32EC8301483AF05F456BC40602458128
331706B5856C638B2A21FD6E3EEF35C1E9284EBA6FA6BD7D6A0EC8C0AA258156
F69C099F71CEE143BC21267E2C1ADB752532231E3F5FA45E164076BB5FFCE691
7CA9181100041B459BB17CD80759DFC467E319E921D94EA5380387D0BAFA7FB3
6E414BABF4863C842780F06968AF6F37C5A5264F3676F2FABCC83FF980A930E4
B7807F1DCC56B6024857EEB86BE779CA22C7C14D8025551A9659A2F80E828062
9B273F5C789A8CD1A47B17ED6472D2E6A34AA67FB860480C39E7D29A739AB969
0AF6A7B22F21759C9E749084217A18FF232FB8513EAE1EE5D7A3EEED5FD7BBB4
B90507482B88E71BBAAA9D4E2B26AF1C8E3EB41EF6EF458D4FC0C6438CC693FE
5F8A6EDCA7B3B21FD8B52E4AF976DFE648F5D2065E5C9DEE996DD6B00C7D62C5
012652521EA2D355D55EAC5F5E5EEB6C3BD61F91091426538CBE10F090205AA5
835CF95521AB7E3D3A0D30B80C411213A50A88AEB41178D40F2F6B6EC6992146
ADCE763FE8B623E1B9E310873D220E942CB9AFEF2D2AEB1A4DC3CFA4B5877564
FF09CC7D32240AF2E738EE54D2113CD417B11D9AE453CFF247FCE08FFF61ED95
89CE27338742CD5586E30036D534CD92391A5ED1E7A5CEBA95213596DE527DAB
2996DE70EC0A0F7482D3DC579F1094ACE9ECC5D9FE4684FE3DC6F5BE6FB51557
A859D8FA99C2CE6920AA41F964D11450F8E87CD7ECE955C8E88C6D34AA6053C5
E23B46F9AA0DA6C1DE6F71A583A8D0E51F7F319CF3C17DE09CD3663776A8458E
1EC717BF924A05F5370E2ED47BF2F6FFA31DCC931FEBBC1544C8EAC53E2265FB
019EEBD5A6AF65C764F58FA57DCB9D840241F35D998ABDE784FF2EBBC22B7FBA
8CDCFE965141E3A478DC3824AF60B64FA8B6333B02D3DFF20376E2037B527825
5ED74188D50D8A9961F61C8B96DBD2EBE301729594B739BF8E03A872C4AAD977
8B49C5090F2602CF076AC86EBF2F9B599DCDFEA662225BB68057E1543A85A2DB
4764D8685F2FB7BC2958E1A18D8E6EBCFDE5BB6E77740FEF4CAB3DBBE446C824
08CE9DE4404E22CCD98D6E2699A9A81A73A90214D99875AC383BC4A17617551F
127DFF26A51C4232142AE77BE9BCFA034A35A8FCCE1666BEFDA04282D48005DC
DD6C0D9E273018499582DAC7466F2A2F0E9E9845C51A7A1A908834567247DF9C
F0CF3A1CDA18F514009B6288C581AA43014B9ACBE9E29DDD2D10990A7232A0C1
70AD04213D6CDFC9CCA956EDCCDAF8A941CCEC5A430105FC80F904811970D397
D8716FB5C7970890FE54824895EDF96BE1BAD6F5A631AFBC83863B7E7581966A
EDB12D972E53E523FA5A68F10665E63D7181F2E40FD6499964828158161C4214
BA0BA974FA63F8879285FD7793C815B35563D49DE04C25E109748A65EAA2AD4D
79F35EF3451BB2322F2C7D62D92415B252F976E4D01ED44ACB32F1C0EB3E3902
66AD10D64F8E93F631555D3DC4BA2676E1C465CD2FBE429D9FFDCA0ADBED668E
96ECBFDD5EEAA17D4C67CB0F2FF735B394606ED3291EF4B35FBEEA29C9480E19
58A754B309D662E8A9B1EC3136E6FD393C42C69D9878FEEF32B35060DAAAFDA6
D08728BB07322F2A21B2DE9135FD5F498AA276D5C122CD719F71E90840D903A9
A468B6243CFC573D7CBEAA5C2BD21491CDD84BEF7782B82F52625915864E7830
FEB445F3ED2175C4913F9DE7114253C3FF32328779B6AE3E48FA9F05470F636E
027DA6139693B30447373AE37EE2A1E5E127837CF901D90E45D154F820EED94F
36AAA4D63F4A5D70F77B7956499C29E53F48A584726D465001A5E855F6698FA2
515C6547DFA3B145E12D4986A6B65078F66C6E4B6D672D61446E34658D3A5762
24DD0869738A370C64F84B1F5024086C3DE064BB393624A04EC1DE8296CC62CE
6E7705941378FAC2D272DF9E543333521654C4B183E8A595EC62E61B1B9C0421
D579F3601586EDCBFA53A5A142A62F8A8CA88474D63A85A5FEE867961C405CD6
2EE872AA502E0ED1FFC703AB903AAC8016866FD209EE197616477583E7762798
DCBD66E9AF00B87E685A8302DBF10A9996448A75935A077151550C265AF45DAC
EE1D150C1A54C242F3EC23FFA530C3C282A5EBBE9C0623DD67FB175D7DDCCB4C
0CC55AD9EC49A144CC2C182B57B71934F8E21E117F06C88E97A151DC9333B28A
3BD7E9DBEC5F1E22744805CF195C5FE1DB56FFDE749FEE82C017E2EADFE6ED31
1D105AAAFAE4D14423F3843EB8E5E72BAE35EA60A7584F51375E115C4B9BF063
A15E923AFBABBB1A9A6D13FB850439BEFD36ED4FB669922B5E03A66105476D0D
5966ABB149D8968ECCABCDD61133C60EA6E56FE7CC4B369B56862624E25B4689
E3D78F5A110D076D28FAB99FBB438DAB9D0275EAC228DFBAEB23D69E4D8E6B47
2D04C134AA240D85BA84E63AF16FA5F88CD9B7585775D8264CB4BDF544181E27
D0ADF946CDAB92740DDC97D80B8F4FB9CBD1144E082AA1E13156A2979A7E5CD1
697FF94032D0D23F343FBA2256DAA9F0129D4181ED2651654333D1FE5087336A
170E594660D2B2DE8221E720008D52B318F2576E5811DA483E58AD5B693BC852
C944AB8BCE2A5F1B7841DD7FC5434086CFB5138FBCBA50A281E043DE91A6568F
517156E10CE81F28118B32DB75CE4A90AB84B2A9228C1A241A1889A19790FBD5
184F8FF8E81CEDE1C353E9AC4C7D41EF7A69A54B549CB3AFC6F5B36537A6E91B
A33E6F6FE09088345B709AE4DF8A2A791A933C2247C76F03D409C88B741C7C58
3AC2354055B75F61967699A8A228C56FA5F8521E21C4DE0D44D6D64797E362B2
466927DB55BF0034713C1B6C1A7CDFC3C5D4230776EE8FA43C69BF70DC89AB1F
37E5763999B2A41D34C7AF16F02E1784082BA44F424651867F44D0AF719A1E09
85DD7823FC7FC6608CA5E436A274FA29D307F187F88A65FBA658466341A35560
E24A5E2B6EA09FB9267164888EA1B6B1EBAFD3618C1AD01908EA956252EA335B
A98602652027BDD9D0EB39BD9ACF02515DA794E32E9EE8C6D9E50A047DB3595F
E5A8DE4102FBB4506AB04363A05C462F7F3D5E3AA4A31912487713E0EBA0EB2F
DD2014E925FB74060CC5E908A44087573416B391764A63053D3CC3EAD40B6CB7
01DBFA16E0BD7678B41B5620E598D2273DD4F8265D5DB014CE5074C9CA2A9542
5E08197829FA5F3DDEF87729543BA588D7DD3075F9336D561D7F93474FFD77F8
4C3F0B540209836EEB8BB20D5F49299503971542BCB52F64E35AE550ADCA7965
5E4B35E5DF78B85F576F1B51A031E2C497B2DAF51B41D688483AEC311CEBEA6D
87DD37B084861BF23FE0B5544E98429AEE3F64EA4F530E11E4362D53CC9A74ED
F2C37152C90CF2F70577F714B23C5E4B89170BA785F43FAAC9D10CC5F59067E7
C972F48A898DDCC41357CB35AE71413B7F6E711D34FAA0F92CE43F2A1DF1E1CF
53DCB1C51BA883986F23D0854F2342D97785DC41792890A7AD62F5B648E9DBAD
B884478ACC3A12A3486CFDAAB37B7EF9A1854289DEA8ABC5D5B234B4DCCA33B2
0C37141A9548CCAAE8BDF83BC01B097CDCC7761E38D51CFBAFCDC943A2894961
7D23327F3C7138AFB940B1D772371AFFBBD1CFC6206423C6F57E1A756BC1064C
B28EC6A9822CE7B70179D9FF90B65A5D487FC684866A3D3823FEC71FF7157020
9B6301A41F9FC58587EEF59AFC5D7384BA8C5E245670CA0D3D5B12487C9BF7AF
D82A62BEBE8DB1F8DF32A90B5F337ABC0074E4063FA3699F89FE2EC579E4DAC6
A8CC360B1B0E8771B255772DD5A9CEE7A87834D07D0BF9EE5B0BFE1CBABB31A0
DBB870E8B0357A8951E63024F8D635717A9B5B9C1C46317E8AC68834A7589F4B
9CD07E2B14BA9F82F8EF13A27DB3219F94C1B977794AEFA031229DF86AF8A16D
7B8EBCBEF0E9625B1FDF724D44A902FA77DA2E3E0EE65FF3DFE8531775162C0F
4DA28CC2725C49847308B8940A522E45C2BCC50B556C5753FC6E17DB29AFE6B2
6DCA06B600D7E73B37819662636A6C61A2CD30D7B6482FF0B2EE990E64795AD5
037D19FF18791873A891BE5EB3B6954E3F2092CE324999D9D6257652533B6268
8973CCA0B84A72BC499FEC443D54B45533C2E1984830748978A70983D2217A73
E983C5B724E5763138F3AEBB10878964232C1D8CE34DECBA82C74E60A84F2DD1
0B0EE046442A56F64B3A15134CFC4511B343D692903AB99C7D38D85EEC82E9E3
69520A924D87B19B1564BB0BAFCC14A7DBEFC9ED936B6B66BA458E40E2EA6ACA
5390AC91D13A6CFFA6A7DDD2DDDF721B63E02CCC7C1915D791ADB9C886FD4A76
831007C833806785C0C74BCAEACB2F77C9026E3D80898E74260F6FB543839173
8BE3328D1FBD6C4BC5246083BEC18592F2F3BD014F1B04AA1603D35B5E57D55D
F8E06FD1E02682B8406FCBB8D579AD28DF80AEF553023901AB1199155EBD3C41
F9221A7796A9134643623631400375802078D5E65AAE7931C2E81CD62920A0B1
F548087A8854A242DFF74FC043843F4AC29C738A8AEBEE71C92C3FFE91E6101C
FECBBB523B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2915A09B
A12788A5A1902F494BFA6D3D8E7D3F247789B3F66B89C968D9EE423FA28779C7
C4AE5BDC26184E8CCDD1EFFFAFF60434BA9ABEADE5E6F62E677140BEEED3F275
20CEF357D329CE19C77E066FF1C282E71934039FC72F423665A123A1D1298626
5B0C9E79E72119BACEC13841E9DF24041AFE6F419772032C49EFAE71C5EDF717
116640A9BD66F49BEF3FED862848C419DD42953401C32280ED7C0E1791FE8906
C654C0D8839C91D50815598C5F47AE2EC97E5DD9ABC28247A6BA4AA5A1C9E006
FC5FD78AD11C4D97DCE89F3EB67CABB400354EB0A84E55DD5D33B18FFC199EDC
750F72F4A7CAB9357FA123A756F0C7147FF0E7FBA7AB60D68AAFF4BA24824B66
C94E848D3333B2202F6A78C0967B755C265B6CA89DB3F0A1B8EE73B3C537E1CE
B3C027AE53608470184ADD0E2925DAC01B32C7CBE83767C81BF8B9F9CE852E76
B46813289E05AA52F88A26AD6F4AEC9C4E77BB63E7A0B70E2D456F228D9B6DA1
CB9A0BD3E1E92564588E4D9A7D7E648303165392262D48A20AA5555E46451421
C0E8585AB09379139F23CB3D8C77D0D6BDF378518F0191B5C396AADBB6DB9E53
702A6B7B36D5A4AF11E23DCA2FC99E0840F76D63A2758663ACD73B4A62533EC3
989ACB0E4C6E9D60DB930261F35BDC55339976953AD3A632FC5745A14019D692
878D2BFFDE5FFD380CAA3320A3E2824A3C265C62FC0200CC0017B31D0FD48E1A
5B0F6FEB9327F8B59497811011410ECED8DBC060257B27B2B41C633A8D4CCD97
E7152717C1BED2DB74AF42475D9CDF3AE242DD1D66FCB9F1AE5FB35B235E00B9
EBA49BEAEB1F916B76BE946B4827460A1B40E02F176E0FCF028DDC5CAA28DCF2
3CEE09613DE19B8B4FC3E854413323BCF01F15DAF16A6160BFB0ED01D65952EA
92835DDDF65E2F197C21A4375696CF99B4C6192E453F0808CE73F2D4A3C0D401
51ADBF03EB931E697EA9D55A017CFBA4C75CBD877A98C5E982813CCAD3195216
2492E5347EF056DA41C58213360A829D3B057E76C017A09CF3CA7C5E1B5B1FC6
DDCC97E522C96DEB7F3B985F46F2D4689399DCB9F629924FFC237B66AF1BDD95
4B17033DE4EC3163A045913BE197701158F16AF749AF119E13019698B6C82F64
C8717D517E4D1FE53A9D64DB8C8188973859FF72AE27F88C606D776D567EE3E7
761200EB0E757471B9F2FB848D5C8579027D13318C1C5CF2BBBE4E50CCD3F307
EE28332BBE759BC12DE5DBBF920303551DCDD502179022D721BDF74CA30E6228
F28199C9CD71A4A14C248DAF40207C8C07AA16C1FB0E4F348C698F56DB95AF71
24187C1DD4C931150C27C6C646AE1FD35F9F8384CB1FFFB31B888772C0CB4B1A
542E66444512F716A4EEC93CA7378E7EBD9B25560C53E4AC114E33286E20CB86
47D5CF50818FE8E1D9714A5A734997EBD7967BACF5564C336B3F7BD345C1477E
E9C758912431234DC7D68EA872DEA68FE8F5B0E703D1C13FD7F0A48D3CA94F0E
EC71D7ECC5A1A95AEDDC2B032CEFB8A363F08F88AAE7FA83981D0AE1A14BD216
A2BB5BCA28F9EC9A86F92A8520C2D001A8456D984EAD8895744A9BB8D5E9D20C
23FDF13319FAD3FF4CC77C1ABB2620113726BF1EC036CD4F7124F48B212C93E0
7A9762842FE36E17530958E2B6AC2F3824B924B21387B8DA358294BB3B3F5C3F
D9DBAA957ED2684D052483F0BA02FE343E68D5609BD9BDB23D5B394918A99E05
6F869B969AE6E2E6E9C78BB5C0D29808DC7711337F102536DE6A7D7A0BECBF7D
52E01C89668D04510AA2F83372D5ACC30A3014FA228BC8FC2F1B0EB261776115
54991D35088E4B18A0492CF80D94E035259C800841BA8E8038C4888675C5A47A
B3C66A5CDD94AB3AB417E1D3748C62FCCB4D444D64ECD97B7B1FF110CCD9A672
410A22614866E25C4365753B051EA91EB799F0C9EE88B790FC96D6F112191565
94C39DF8598E59ABC1A9B2625E09A5B085A7409B7F821EE62C165025CE00D43D
8ACD665BDAEDBAE8F0205161B5E1045D57945091A122177F01A8F073D4CFF295
39654032F12A48A5E801503936492EB2501CA9FB5003F0BC7D365DD89E921690
64F91E4F2CEDA12888679C2E7D381D46A2C77B5E136310595F1853E28C25A05C
13362FDB94BD7CB1AAB0BD24421BE8767DA12AFC7472C590AF53F2FB364F36AC
04120AC70EA73AF057E61705E3FA02FAA1FBA84B86314024086F60B93142D875
AD78D76D8F8AB46670DE28C5A89822A001B016D144B732C362DCD0251E322FC4
93873229D3764545406A0E13C4B0C30C44B86E560D939E2A7E61E338F5BC2278
3BFEF9A2010B6B5F0920FAC6168FD678E4E2D01E7A7106B3F55CB2C7032054DA
4BFD75B52C503D4EA304AD2EAA59D66CAFC8FF3E818BAFB3D3F4C0E5698ECC16
5867BE9BE56EE53137CEB76B7CC05B4E63774B4862989C7AC4C3ED994804C531
2685256E94296E39B453DDED24DE957DAF1D2EB659F242AFD1BAF882C5BD7EF1
BE75C11FB57423BC1ADD38784901A8D8D116B23D7DCB522385E8ADB968840503
CA4D5E2AC5366D52C8ADB5F4119680BE35753A6B9DE6D611C1D9F4AFFC96C82C
207B5072C67C3DBA785BE89A0B598716155B3C85A075113C5B4078EFC32FC522
50E21A94035655863C23FC885C238D76C000FAEA9892ED482A301DE67425953B
3B11588207A04C68878AE0427D45279984B3CE34B4825358D442FD5A7CA10A36
CD6E206529CBF6E6283267DF943D79200FDB98F2EDECDF2E8B53733E9B6759E5
E91347B8B4B0A2CD323262378A4AEF779FD1CA58F3718549EC99A603A6854A4C
F398406CB57201CF17A40025C0864009070FE6220989B0376C0ED6C73E3B6CE7
D556FBB1DD1F827CBB0F665DD1E083F09718EF9D5397E169BF7B7A995DB33B6C
8669B54B1999DAAC700952DA2EB5BA52B0BC037DF654F27414DE03AAE10D661D
CB65DFB4808C1E53B60D4C9972F53E42B2BB111F08409FDAD65017DE48223780
A514FD1B50C4F69ECFD657744CEBDF00FDB51A407BFCE655489BF9DB94EE32E1
45E7DB89522951AC8CE23E51C04A8965EB42256E323A3A00CF029AF34E9A3C9F
2BB7F5B3F022D75F94781638B59336F4A15EE058FE714108C91F7F876591BAFE
5B68D385A68034ED5547D1AB283C61183E529B756FB9C599262888D0004001C2
F87D1C56DA13EABEED1EEE61EAA0C51F692743899CE3E5F7130719EB18EE9388
435BF85B7314329D9A627A152BB46A1C025FB7555D6F1580C8ACAC8B262E216B
C6CEC29C63AD8BE0773A5F616A3A847ACB33853D8D3E8E0F993A293389A0AF6A
BCA8F799C4FBB6BB3F101B86620D8CA568B52DAF284B328EE65EED736624DCAF
3ACC1DDFC55AB83120BF927CFB7BCAB17995A5BF1DAE6287EEF2AC96725B7180
F1083DB1D92266662D673CB61D246C230A5C67CBDA8375CAE58C3DCE54E41BE3
9C3B23851533206B01D916B91770AF90F66E594D455A15E90D411CC694A7C397
03192671317A3474BBD07F7D37F55BD432072626B314D15F7B6A2CE9C0936D43
6D05FC9B929EF4337B5A2A9FE6F15873DA4CA6D756DED606AB2210D0EB77B3A8
0471CA9370EE5353361BBB62DC4343963E1825F248BF2AD28C5782473D75AED9
AD610D78BFAD71A3A5098E4845C2DDD76316FE8513E8AC61CE010A1AE1FD328A
459A9A1995D028F52C77988866D35C544EF3E38AC5FBE79FEE0E0FD495C28DB1
12EB1A0333B720BF487E323D88D2C23EE1362DFA5913855FCC94A0887DE83FCC
5553A5E9C54B9409F5D552DFF9393C7ED4D19F68BEC03D50213695BC8686030C
F77CF88FFA4A55C05076F1B073AA181841FBB5BC8536F13B247B70D43D515087
2DB7B85F8FECD4ED311F50184F0DD874F55650473FA1539E9D4C3947D0170D8F
4B78E9D265CBECD8C3B0F4FA685EA84379A3376A93E8C322160ED9E5BB152A84
A8682981D5A30E28EF3E29A3A5D9E639BF8BB91E345C50B0995D0F24B31ED509
3E9E404D20276D7FB4393D6717BB15242C978B8CD1E3DE1C653D97C4762F42D1
FC704A1940AD4D991670B8A548A41201A725FAED68A6A02BD112745C57D447DD
C6A539D8F04F580D07D2EB8AFC987821336335D1702189DE9FD9115616468FDB
84EDFCB943B7D885C6697B4DD34FEEBCB2EC3BF4E5FC492F8E315D53942C17DA
6304F8C970F961B696227ACB6C674E23BF1DC087DE4FAB3A90F7A45878EFCB7E
6605CC862179264E31C5069B86FC5855AF4A3577655349FE26A1AB037980247D
02090623336E67428384A5AF642948BA121243C63FFF6165CC30EE0CE4B550F9
89E16038FAAE62BF0344E61EC5B67553FB792322A3461E0A9F6CEA8D11E45403
2CAB353F140638A5F8872E26DD1B98EC4978F69357CC999987365C3D4915F27A
8C6925F07F3D108751823E47ACED22FF0237C1C6C262DFC292049140B1F252FB
931C6403B67CDD595EDC118F147CBBCB0C85A526DCEB78DB15A10692A70DAC0C
60BC7EB7CA57FEF6B4ACA7D49C295513A2CD8FEC0FD67EED9B40FBBCDC47CB52
0F1B75B5B112DD65D6F9D29BDD23E950680073AACD3F31CC1E28FF2FA2550694
C0E52A2F77846CCEBFEC5E60BE29FABC8E25E72A1235EF24CC1AE6C2DF4A874E
A022C0B076E545C36C8B58221871A59987C18EFCD2A3ED9146C383091D27D86E
A79D572CE3E8E15C79AF8FD83B0EE5BB7BDD9FC4A7D87E0088CE6BC7B38DE08C
18FCD65B6B4DA82B833F3E3A83E4C48D930E1D6AED65F7A3DAE42A9EF2350E02
576CB1E9578B8017D8FAE9C9CA69D569F1D9F707635A47EB493EDA03BC880912
69F715CBB7236C555C667A4E0FB0EA5ED0B15F96734E39F7137E6E5EB79C43AD
201403569FE3CB2F08E775105821E7CD644358A044E9BA906E38FD0820626223
B06070BF6C4E409BA710176664D46C0AD35FA53A597F205B3B21FFA19422EEB9
C09F85EB9C63301ED87E665E8462E85AECA1E75F18970D7921F4C1C614D2E1F2
DA8A89D3E28645458B90471F377352CD248472AC9AD3B14802B80F07521495DB
7887EFCF1BAA48996760D59D3325ABC376AB4648217BC750D8C6FD5F0150E03E
F744FAA7BA907FCB507CB8C9304731C6DEE66D3628B3CE1DDF43FCFA728230BB
CF29D1BB68F213FCB4FCFBDF532AFEC4CB347FC975B42AF2B9729DE7060AFDFF
E8EDC6878C4EFAC9B65B5EF5B570782122822538EA2A7F94B949D9FB8FD3CE7B
D556C228923835987FB727C2BF2B164F3661B6F903E15C5C66A48D90FB95C58D
88A55F50EB6A25738A3925549B7028214B7906B3AF14F17BFCBB9BAD7165A79B
5FA7ECC1FAC4518FF8C317D35DB8C63984256F48B1511F3B48813A66660BF40A
168330EAE2E3801E6D80FD1903ECD8651E7414A3BF0804B124CB9584E08C7F09
8981A8D106A87E2BD3AA9B640F925E103AE6795E367E414C0F1CBBD3BD0496E3
75F22A2EAF35CA2192ACE174BAF3E45541C1104A16E88E05393D509C00C6AE38
3FF18FB12FD12C8D62F0B0E25D8E57848DC52BD6235A2E63EEF7A1334C65A41B
935DB51B73DC2C8371FAFF828577F60BD85C1963461AE79770477DB371E22E5D
8252074B840785C45EF93E44DCAE93C437E85FA7E0C7280486C07560A53EF104
ABD9DF0B8E9CF5545E096B53F5E871EBCA3EC6F2E8BFC17ECBA1771ADF2FA256
2D61447F7E81701A4BD723CF5BA2DC8296CA52CFD527C4505E73BA7A09C776C2
8522F4B0D21D34598359BE6C6F35FE66D625E826DD6B86603E7D055BE6ECEE1A
634391249BFF26DDE8C7452A7DFAF0B01DBEDF3154D36FFCD10075C027B0264D
7B0569F438281F609644D6EA645AA003C2149A6B248296108FBF4C931991FFF9
2E90DF430EF8D967EE40E1745EB847984B545F1E4D93DB93A00ED65575FD00D2
E562BA57FBC043AE1C7FA4C13B1FDD621FE2340B708C06A3249E2681FBD292F5
7049AB9A746508749A162D368B55999C9FFE8A2D152933DE233E4F09E01ED36B
87C62511B86A378640E4F5CCB080657C8781C193E7AB8D2ADEEDC70597B2BA90
6FAE6D40B6320B20B0D1A28FBA1FABA63341EB5A60EA8BF1D3D0722458329864
FA3CDCA871434641B532F8E4527C74351D2A6D27F9A1B1A4CAAF54A559C67030
89EC0B261C2B9453A010AED4C6929A66B52D7B3A664668DBA5EC38B5A58946C0
6AC2C247DCA8EB5902B67B7B8DEB7396D3D49208E11808D70B10E2C714227D32
0129E77E529332EE9CDD7CB5C40E9BFE9B308925D9DA7F3AFF2000E6392B7606
2AD518DADFEF4E8AD4FE6C43D0E25CABC977874564BEB8AE2FAC3BE12053F9B3
8DFDB80B5292C6807B685554CC9CA7FDB3CAF763EA015DBCD5D0F3AEDB125872
D946DBC2DA98A48CE38B2F95CB5A9A6629FC89CEA6173615BE8596EA5D2F18DB
2F75646B82CF5F3E8F9780883F7D3C9E89E0C13371F4FD5165A16A875D03B58F
859217245F995F6E2E737821D7801780C4844311C2FCA48C2A4C3B864B696B2D
D6523553F20FB7CBCFF4C25508C30603F3F265972EC9C442A81D840C80B697AC
72681A524AF063D986DBB3EF494215D26F7C99B74FA77A031A738956EDCB6A65
327CF5891BE37D46722ACF441D2593F29D602ED6CE0EFC8E993E62E083D858B4
B60EF72532C6E0E9EDEE1195A725E3F5BF3D202734ABDAB7E7360E5E0F24A58E
1FB766BD05514A62937D118B3FC67BBAA57892DFD98EA3398AC0396BDC7895AC
C13E75A9E02F954C153A70CF11E102BE9DE88FB974A49E76808930C8A598A8BA
B53B61F4B899C64A29EDBF9718E8B4A16D23F91E8FE503A926F480318D72B456
0B9F1BD1FB79B3955BC0FDE4AC7AF5C4F2622812A497430FC93E167062779A11
F3D541F23B7D8882823457841BEAED1650D53CF8F1E9E49FD86DFC93CB6BD7BD
FA554885DE7D6E77DFBDB21B1A201A3DAD336F396CFC539FEC88B3B650151F32
15AB8001F79610F605FAA3EA8EF028B8DA4BDC5C4E762A474B06F85D8A1097E2
6DF1500D49DFA5DE63C1294E72C05CD044C6FA9265CF80B2FA2A93CAD88D6EA7
3EEBB1EBCC87C58F68C347767B59C47165C8A5AA0CF3EF1DC0AF0ACF481E6B70
BC27A37798F44A24FEEE2FDB99425D86EA6DC95FF7364B611A370B87B8316024
103323E1A0629D1DAEBF6EE907066780D9B5E367C789C6F197505A0EDD51AE33
34064B396A3A13CA24A1C7D0D4A7676358F6E542DDA71D4E02589C5AB048A4D8
4096C9C14C811F0249B6B4EB892A9B35321974A1EEE97337DCE415DC026D2B4F
98D7E9AFFF293EDAEC6C5267051D88CF0808CD79EA91AF1389820B5EB16637AF
F2D79CA854423AF26473439EEC4CC75183EAFC339C45093BF3D3A451454D16D3
61272E96F9F3A0747401D8D574FF7871B334C3680F6A46E2902EF22952D28930
C4A340D02DF2EADE8D442EFC14E832A98940A7C3B670C714AFA2C2AECFE5D2EC
D7006C5FD662FBF7D963C4440517363369A0182A37F49D79288333727B70CB44
ED4A683F7F9DEE9E0602D7E1B223C03206B2E72111A98A84D31EE663780BD49B
CF2FEEF1B4B9866CFA9B0C1AD3426BBA1245616CC8C436E7C78C805B383DB44D
9748499DFA0E24C58D8E8C34E22B4E981FFB1D95A04C252B464B185515C74D6F
0943D1331FD771D11C45D9B46196685E3E92E848AC430B1F825013384F873D5A
7F69BE94D9259236710933B11D3B7BDF02280BC47D9F4F51591D20AB97EB530A
BF26FBF0539D9283010CD819B805F6AD9BD2B98C36E4BEA4590AADB995DD9BF7
1AC126DBFC8AE8EDDF7A605B809761D6C7E41709225E9D1F73C2AC6D776D755D
02F8BE5823986E91F9F8E272C065B39226C2DB5D353E9761FC653CFEF11AD76D
73A4685829A4747637505038EB5C6B4C657F7580F6BC0FD12CE8F4559745F1E8
9028064CA68183BFB7EAA2258CF3BA78E3C359B1D014013182F34E6A826C99DB
89045D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 78 /N put
dup 82 /R put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 108 /l put
dup 109 /m put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 122 /z put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E03ED7D4F3EDBCA1926
2AF6A41F67AFCFBF3630C943FA111E4CCD988A7363F7C2B75EAF5830B049460E
0D2B337988F150B9182E989E7750C51BA83DF37685483F86D1F47478883F3F6A
4B7F768DA5AA89E8F163029ADD4A9209DE8A4F285766C06EA859639B92CCCDCA
F59B1C2BB8D588CA754D1257BFF76B53984DF4937093AAEF79009D32A29A4C16
FB610C7D6713482C48D7F9E8410C0F00AD6E67021056B6035534E79F05D14EF2
4E84480262A2CABB0E39DE7BB6BD48572F469F24031650A03ECA5CCB89BA5B68
4C2C094C25DF1C5E504A7A74D2F9869FB284DC9F98197F240E288DD104E9FA98
16E4943C7770E767AF746B89E7D1C674A05F6A354F27769ED5DE31833E024E2B
F150B50BA56365EDDC1223D8508534BA250A50A8703A219DCE219511525BEF09
18022434FDD7DAFA1AED0092C7002FE7CF2309303D9D13E1EC272F8783BACBDF
D91C94DE799E7D6FB5F110F58E3B2B0861E12E87F968C56506037B65A543AC4F
C97558A1FBBD6A42033F86C908DD2A1536A0827FA8857D057924BF0C02E257B0
A99B6050642144B9AB1992114E644089CBEB07B4C4B1BAF2777963044D942DF6
708BE8872109EC5A4537C49EA7D9BA5BF8D75E82BB9E0552A5843A759C770DE4
0FED93974D0BE0533270A9AA44B8FC9A36373D86069C2637C7AFC0FF3C5E8023
9B5D7B9CB1EB96BCC68E111AC2F8FE8DAC52B2F3BE7FE3DDDA4E7101DDB1E612
2B89DBE111262BF6948170249C199644C06594B5BA76C1C8114590CA3FCA343B
A1635D84D7C3760A2E3ABBCA005217D91978C8A2BE49017CE78EEC210F8A82E4
AE5726395D8CC0DD6CB0958C5EB7778D27AB5C8AA5F53C5B5A870E2309CD25B4
2AEE8226DBF589221E14029AB0275EA2FC2E4CCC5F9C5E35A0D0395209B1BA36
A4BEF3ABB44E5A91EAC61AF8439980817E07C87238B2305290E75088C59AEB68
0CE81D28251A25FE8F097BB5747511F1EB5997065F5281091B507A3028DBF50F
8EF3411280977299B48B17B87F2894E7678E2F363ACA9F368A44E18ADC6B97E4
251D8872EB4BC7CDA29A32F2E33DC323345338B6C5026FD5465B08D329643A4A
D6EE66E7A950D09052B3799181DFB65C6695CE86899806867D0C558A49BF2F42
7EE60113B9D3ED1176D928D869CEF5E8B4E81914AE60D1DC859BA7C267EBC880
78EA6629926AE9079C8C35C06729911157E0FA7CB17E3AB37C001EBF8319A8C1
E54F5C9B167304D97042A29654DC73A5376053859681703135E45A8361C88A49
9C62A3BDDBC69C51C4C8E34BE80E1C410A48E94AF4CB068D302DAD501871220E
F97B1B8FE5DC6E61FFCF1C17DA464308F8E7C19991F04D8C73FF6262A4F67B8A
D400FD80A6FC8031152FC15F2E5DB0C6947F721712DD59FD00D09516D8F41352
96CEF6ECAFF745A466D8D82A0F37A4F7E92FA5A1810B8D74F114276BEDCA7CD4
DD8137D7CF6FC10A9BB7AADE111C76196A353179D6D85587C0E9E66A0F8E7905
D685B2074DBE7339D83E4F04B51DE04B0969963C7CDAAB5F52AE5E4B85B52607
27001DA516C1A036D1238A19C080586BCB323A8EA809203410F950C50A73F4E6
65CA0F973407E6BD6AC13B191C364F38A77E9BAF26EFC8358ED91CD8A304AD66
C5CB3A683D7299CD26E72DCA3AFBAA9F0612657FA377600C351FC9889D49B33A
4F1572E84256AEC43FB77496B7F260F339AB376653D89FF9B1890E37A21264C0
F174D01DEB54E7D18CF45403F3D43C147AA1C5C0D84003F533AE2CEFC2592D27
82CC2A424AF4688DB1790E5BE9F91B957A82436879BDC7CAB6116645A299E2D0
4E9A1BAA856CD7E5D98FA6B744314CFAF3E61C2792041525742A735F052AEC7E
99612ACA2C66714B3E75C02DBCB9E52C930E05DB0B1210D6544B55B32113E1A4
1E9364E91C23ED0416FD4B13DDDF1A2A6B8CED98DFA253D906C0FA1C012D6B30
DDF212D4CA273EAC4440903C9E7BE7D8C02EFE517105EAB3D0D26977A2E315F4
158841A901EBADFD41C43ED284ADE78B2BDAB9D62ABEB717232334BE3E3026EA
A1D06F0C60508CB89B71834785BAF8FC022269ECAAA0481AAFEFCD01EE43F3C6
6B52F79146E72A6F6D83E1D552F2FDD293AAA51A2F8EA02F5EE01A0D8521F13C
EF6C9B1C217033C9660F39E10372BABBBB208CD6AC94D55C442490254F2915A0
DAD469D1BC813A1CC276A30108AA0BD1C09EC0441474F77D53762A055CF8577A
90FE22EEB30E8429BA5509779332A0CB55C8B97DE5E36E66997A7E910B2180E3
15022D5A47228C13E9E09CEEAB8209031C18FE8ED366137E34965C860F453574
7046240700B2C4D1B765AE6A737077C61E5A832EBA1E75088222C87529DF6752
2928349E5905BBFEA204B5F21B8D68AD4B7F1B8A5C4CBEA2F584D74809D4BABA
0BB6C4A12DB53DE2A201EF655320C5D3A7BC82F350B2F808443BD2332DDE979C
C68DD814A2732F87D8C1530156AA504AB84DD4515A163863652236111628C535
3ECB09E87FEF59D1FBB1A2651DBA1CD8220B39DC88B9ADFCB96E34E85A4631DB
B654BB0295AD2F46387E18D510EFB3BDFC5A3FC75591E9B8B1B18C769D0AE787
5690E500307CF5CB27B127F5163EA38FC8000AED6B15EEA89E58937F9A812077
F6649F50706B3F0018E7D858DC7C3BEA009A6B342A1A2E42634F0D31EA130B65
89706BE925C281B6BC879090CA1F1EF3D98A12E0D852D49B15A581F29E0A7428
72A01BED3D21E12A9CB1BC3560F979A83D29ADC7B65E2C5CFD7824C4AE668126
E268339F62598D6B17CCCEBD6CA5D31B2D6C573F908B00CEA4A35E4556ABD31A
A3AC0E5A17E3D64608949B5282760420376287A21C7189D153C44EA127972F8A
55FB4E4D794B1417A366918BD536507B4E04331CF18F4DA2A81F3216004245C7
12D76E6B2D7E1B62A7ACACDD5814A538E1B78C23E2908BBEC2AF17BE0C46F50B
4F381B929D4F561E054C921328B14D37DBF81B65B15BFE62F7879D6B3F64801A
53076B2D0C34A32AA121DF0EEC3527BA3B3D9D1C262E9165D4633A6FC1F4000A
92F76C82192599CC96FC4078BE1BB2701DE6E45B5AA1211588AFC544A97DFA06
00C82589FB01413814BF3C51A5B750B37503D79A65C1764A35EB7900B094C42D
611C28456BECC31DFC7F3091C17B801E4B88843331BEDEB28620A400B08731B5
9BD00D9EEE056AA3978E373272D2E8A268E52CB68BFBF3D2D3C2230E18970FAB
8263260EF4F7B260233439164C654603593A00ADA7694043EC9A6CA870B8CC32
2D849CCD4391B1E7D922F877FE913B3F8D073F02EDFCF2DC07037D57BA7C43E3
5D82FB9C8A4E1F804DF61854EBB29AB260377F833CF863B92FF349DEF412A50B
E36F79165BB25190E19375A4E0BB9CFECB2D06DE1CE1B2E096CD4B5D63590BE9
264295FF36E55D790968479B076C2789CCCB289CB035D8BA8FE29A5C17CCE480
F815674EDD4295D6079B1A95805ABD5DE5444B0689C36411B1BBAE831681F9B7
00623537F4895A7D91514DD1155463EDFA91B16738AE2F1BB72550742952DA13
580925A4C53EF89319786CE7A684D581EE708EB0FAD63B44CA172C521965C5D7
136641CEFA67B2F6B37068E62A8CD6BA8C2059C1ED09E0DFE0D0DB997CBF50A2
0D4DE8A76A84CA2C488C8BA93ECF23808F2C9DBD3DEEC2F2E711AA263FA16E3D
9F9B551BCF5AB6C9EE2557C19E053E69E2891D14852DCD3F8E624B1F3353DA24
0D9393EA358415DE735A30FA5CA2E723DC1C3012A9733960943703DAD6D94E0B
2AFC2B1DB3F247F8319F5819D2A26128EEF25BB8C31B9D1B45943F56AF32C679
1949EF17DFDEA2DDC88251A5496A1D6174164BBC4D6833597197383C9294A1C5
1CA5EA99DDBABE62552EFF8048750A64B261F5EAD89F89E55DAFBBD8B25D08F9
EBB3CBE0CECD5B29AA52ED0DAAA4FCEB9302633D67D46DA57E40F7325B551858
666E7C52464E6ACCA7474D54A5C9A43062F88B59C19BD66CABB32BFD34E9B4E5
103BF6572D4C5C75EA89C83C3FD3DA46C6E85166AF8E9EB692CE6DD5316E1B4F
10386C33B6357C827B9492593F17419C5938218A3945AFAA7CE312724EDB4AAB
4A40EEC9E459B62D0FDE7D3545D234AA43C14FB17822D555DB9F4B11BA55E46B
B6FC99EF131EE7FAF851B9779CF9B2BEE351A96201BA611ED6DBFAE3BEC1BD87
69572CEC92FCE39B635F3B74B08FAE426AB4C127E64B01DF967EF31CAAD445AD
A2C16314440FDAF3B472B899EA43A2D713433FEE3DD6B8B18C4073872619132A
2D9EA02F6C47D96B024F83292389470DBDF4D4513BB5FEDEEF570A28F1A8D5F7
D9C7907448BA4E651AAE7EC46642C2D77C4B3683C08A186793FABC6D4BCB005E
43A5B512179DE7ACA60BF8D7EB41FCA56AE6EBE6A2A6C24CD5CF77C5FC52EAE4
28D66BAED373E15D7B7765293B2C06E75D9A64121CFA896CA2CE0C9C03C91270
B297CD43701FAF840D0032E7F78FB3931C3E4DD4C146C259466D022FC603E17A
8E988D9A538883855C801FFCA558773958AE34477B427BEE00F86B7C9C2EC90B
06E080F0A5D13452A4115D143DCCA35FFF40CB525FBF493A46A9F6A127AAF56C
7BE5750D248BC4B827556B6E1193C388F43A33EE700F23D36311D59116CF6642
6882540AB68DD498DCF16D3160C4B5D4D4B1430EA3735FC84B296C0879626911
C167041634FCB9C21C4877E0A05CB6C19EB8993E7520F89CA0A4DDDF0C336A53
D0BACD7D682260982B304D6508CCC442A92C7746A945
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 65 /A put
dup 67 /C put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B41A77EA47F9
681F5618B8703DE456E33A91102F06B4998772B641344010D6709404AD18B0B3
066C6FF38F4456DFB383D9B1B841293107C392BD4039CDFA5C84BCB54097265D
06F6B7D7C73F265749C635B5F542548139DE55E2DEF3E686E3923FB3132A5C6C
AF12018F0FC0FF895E35C9741C56AC54FE0B7FF1C4BF2E52523B1AC1FA842B53
DEADA23F8FFB65DA7B39CCC630DA6FE04388DF5E5BF0A873682B151E7EDE0CE0
F3BDF6998546B3D0492AD1069A8AF5C515FA75A4D044D1218C04AFFFC544A765
E3BCDEB6B067625DE6EBBADEC087A11AF81634A98CA31DEE777C1C2805A7FE90
37DBCD39AD9505D3303D5AE7DA3698265AC1B776C7B1978FA33E0B494F73AF46
2C221D3C7A6D5EBB87F47D979BB62286A63D78CCA3A61E407A5D3CA27A484359
AAC71196CD25EE9FAC8CBEB91763793338D58A7C3E724B8C01C6189499B65067
599EECB65843C99DEEF599A8F0151F6DACA4EDD4526B1BF5C5158D8A9115F4CE
FF986F8B364EC6944A78596D00A7DEF67534B193E3C18F06350D213625ACA24E
61C4FE1EB998BDF7FAE02D37BDAD392FBF1D84399C3155A209696C54E6AC729E
02736C58832C17CFF764C4E9CF0164D01F6C4D3BD1697456DBF3EFAAD357F3BB
00839AEBC108382F990F9117F40049D8D1A8E2A9F396FDF476B931E860446F7D
4E5977A2CFC75000C9E0ADCC19D9C0D1DD53F89A94C010C1A7416257AC622162
02A8889D589A5FC78D36A1783309ED31A09CC3D9CC77F9D4C84C21ECFE20401E
280948D3DAB610645D031D9C0020C9166B9E47C85749EF217E7BC15FD2BF6261
A09DD8C48348B39AFE70DE5171905CD6DAF6F574C4531A1477039FB106568FB6
F756084AA6C6A7CB595E3113C4A23DE1E9B8E83872592859A31887C3079C000D
5C8986F427FF7AFA4E6A3DCB29113AD9871AE57AC546989926B399BC27DFE6DF
3296991E13EC0523FABAF415CD49F7321FA86C5E91A269B33ABFA421AB6F54CD
AF67801778DB931A22C9F54F9BD4FD3BA8093B50186F64354BE0156C7742EF57
14EEFDFF0A14A6FC9CD7D1EA3E33585576EFC89B0B01002B65D0169AE74F8924
91A49F5D893514918EF476C6B4593AAAD081623800E03CA9A6C9B4E065AC886E
5928818F088EF35DD664802641F082186BAC779FB6CB6DE5583BF976A501C83A
0AA5C0A5AB473C3C3221B799E7264507B1257B334D01BA7C4F23D759F0D850F4
4EC3C4B7DD9955392B7EDD081A60ADCFBDA7C5BA32F0C361B08BC273FC9FC26B
93CDAEE5F7D46ED20F7D3F782914D85D940C9824A95E8AD2093FE5A9FC7C0D93
BE2638481CAE8463F5261717D501C4C6B8771FB823E69C0472BC71AECA9306EE
6F98DB0659C75198F603FD25B156E9FBCBAA56ABADB01262E49DAE0DDAF1F117
74136F0A6C4D15E90FFF5AB9CCA8777DB0305EED6F7D2CDD459862B6BE96EE27
E4B5E5EA3038C985D09CF11FB410C0012B311C76E5B28B03896A9BCDFA5C4653
7A990308C4E46360D232FB79C054341A81BFE4CF5DAA8A002A5B709C891ADAF7
21ACE0EF7549027362820AAD10387724C6160E1D01B8F4D704AB7AF070243DDB
C618AB4EA34E02B61AE19CA51D480A17940AFB3776B76576AC43393F1B56EA02
46FEE5483ED6958B2A9B4EDD526F947D4EBCDAE569DBA0C6EE98D2CCE768F056
5CA525B41BAA5632BB8D00D4246A1F306DA8200DCE5ABEFEEA9A58ECDB59427B
23869562C7896BDED54DC48B72E5F7A1038C2707DE563A946CDD976C99DDDF81
00F969BF780CAE52EB6C57028BE36AA02DDF2C698AD51E14EDD17F93651741FD
5C23B18818F84DBB4EAF8BF546F737D3CA29B5EFD7C513FBC1A6A1DA8DDFA960
7313198CFEBD86BB3854BAED3BBBAD7524C6AD829B81D983C2DA65B10AC200BD
5E11046C2D817B47867CD51CC32CFBD6EA6BA3AA164AC9E85766D5CBA8481218
50ABE582BA4E4600E1021B23F379174DB576EF8302E5105F79B5A0DA25F55542
0C159B0F1871BD9DD41179FAEF721F33FC4FDD5E1CD56D36FF706BCB24F6F76C
FB17757674EEE7B6664A11C7948C4EB503832116438F72CEEFDAFA841E2E281C
EF1F2A97DC188150670EFE671C46775F05C496D761E16468A839A4B48ABBC61E
17ACC881C78846CE85289F15BDDA2C283103BA6B3B1BDC0D8E525E5CE8548A9D
091D5D8B59810143584C3302558D5CBD5D30B31933B3BA727F4F2916E55B48CF
1E8EB9EE477D88C10B880F208BDBBF6263BB4EEB09EDDD808B4195994F529C17
88543843E386B097E5AAFF15D7F0F30CCCFFBF2332FD8B30B432960535956EA0
BBDB27977E6650E58A5A5AB9BF9654E1EA4C65B22AA916FF9D7A8C7829EA3393
4D4965D9C1C282FE584429B0FCEF17E66468539B71AA2119F7CA1DF97F1D52CF
8925F0CEC943284EF8C731B6B526105F7542DF25E8263F1F1B48F31EE8020E74
28E07909CFF7113B347E05708A5CE836F095B719E0A97992C9C6A6F27ABBD8A6
03852DD0F465547AB073F17F6748B65221CD1DFFC8A01A7375890059A95B1E66
3BD5C163B1CEF6A082F49EC0EE2CF11CF70018A75ACCCC763369D440F09F0155
E7C6CD12CDD3E6A722C947E00FAD2452DBA776C333449A12D3D5731D6869029A
592F8064BA3D59F520EC70ECEC57B3C11F74D09C7B41DC8A15E9C832725C67AE
6117F1DED18705A753074CA9CE9CCCF8A7311C28FFAF38D0D46255D6C39E862A
BC263692B498CE9A05020AAA6E451493E4F5F3DE13B91D0B59E71F0C23D6E261
49C7E97FC2D95CEFCF4F29B45CDD85F0A5306B6EE5BF855E515D78E61F222E52
11849FED9DC1C02C6468B1F456087502A46BF4E64403ECCA81DA4E571DB1FCC9
D5623DC0FD2AE3CAEC034A99E5436405B4E3666EEE737592415F8D491BA890BB
BEFD579A7A165993787FE7EA906EE027AC4FB2826A6AF388D5C7F899076CB589
2060FA680863198D84CE7C1BE93164D307C4233878D560DAF434B806D14F2E8C
8ECC5BD3E50BFE9A01D61BD19364CDA37E5512ED4D9B529DECE48303996D2F3F
3F71C7A9AC9C4D734000EA238B0BD7EE202F1A9FB7586A0393E715DC2F2CCC9E
4C0CD9CE8A371F5682932FC2D30BC759B931BF05B5ECB4FF9FE5CE5CEED79F83
ECE4AA7961D64E4F5B26E6218482FBB9B9CA019ED1F0CE2FD1B144F589210F4F
E80C0D2DBE14D98B2914B1AA9304AF40DDA0D61B3BE6A020BAACD7EE89A04FC1
3041B776C398B6F259D4D3B35DCDF6189B3AD77084F930A77337ECE68387365E
C3342A4ACF4A5EB3EEB1AE0DFB2178841857911804A659A042F9D60ABE5FDEF7
94A3D4B2AFDB9D487397AC283C6A9CA1EBCF9AFB9FABBB1FDC18D6027E87605F
A5162F4DBB7858C3E38179A7C4BBE55C4A9140D2F7BF941C01C376359BEF8044
DA03B84AF2D91BD59EFB1B2D02E7F48BC1AEF77CF18DA61A6E3034B973091D00
F3CB80B63BEAEB189B76CEA0A8A1A34D0BEF7CBD00385881F48B86534DA31B00
C266E46FB4B2FDC9381A4C8EF3B062AB49B1218BB9ACEB9A26A04A520FC80972
BEB6102A38BB9FF66FF7EEC03639DFE2E09E15B493F25404B02EA89A2F20B8B3
D0A8BD024972D100401C762CF44D1A3183A7B44F967690747AC6C88613EFBEAA
729074EDABC8E7FEAABD9052E3641F166AE6DAD99F6D3502F1C3780CC0B5280F
8E4D20672ED8E06B54D61CC4E6F001856304D733B95F480625192CCEF0EC8225
B9E02FF37850AFE36CB296C1639DAE41
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (template.dvi)
@start /Fa 240[42 15[{}1 83.022 /CMSY10 rf /Fb 133[37
44 44 60 44 46 32 33 33 1[46 42 46 69 23 44 25 23 46
42 25 37 46 37 46 42 9[85 2[60 46 3[65 1[76 52 65 1[30
1[65 54 57 63 60 59 62 6[23 1[42 42 42 42 42 42 42 42
42 42 23 28 23 2[32 32 23 25[46 46 48 11[{}60 83.022
/CMR10 rf /Fc 133[60 71 1[97 71 75 52 53 55 1[75 67 75
112 37 2[37 75 67 41 61 75 60 75 65 13[75 5[128 81 2[50
2[85 88 103 14[67 67 67 67 67 7[52 52 28[78 11[{}37 119.552
/CMBX12 rf /Fd 133[43 5[38 1[38 1[54 2[81 27 6[43 2[54
49 13[54 72 3[73 24[49 1[49 49 49 49 36[57 11[{}18 99.6264
/CMR12 rf /Fe 138[73 51 52 51 1[73 66 73 111 3[36 73
66 1[58 1[58 31[96 1[99 15[66 49[{}16 143.462 /CMR17
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 472 Assignment 1) /Subject (CS 472 Project 1) /Creator (LaTeX with hyperref package) /Author (Neale Ratzlaff) /Keywords (CS472) /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a
150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150 0
a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 0 TeXcolorgray 0 TeXcolorgray 872 1946 a Fe(Computer)43
b(Arc)l(hitecture)i(Assignmen)l(t)e(1)1649 2312 y Fd(Neale)33
b(Ratzla\013)1546 2552 y(30)f(Septem)m(b)s(er)j(2015)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fc(1)135 b(Di\013erence)46
b(b)t(et)l(w)l(een)g(arc)l(hitecture)g(and)f(organization)150
265 y Fb(Organization)31 b(is)j(what)f(most)h(p)r(eople)f(think)h(of)g
(when)g(they)g(think)g(of)f(arc)n(hitecture,)h(when)g(organization)d
(is)150 364 y(mostly)e(de\014ned)h(b)n(y)g(the)g(ISA.)g(Organization)d
(is)j(the)g(ph)n(ysical)f(la)n(y)n(out)f(of)i(the)g(hardw)n(are.)41
b(The)30 b(la)n(y)n(out)e(of)i(the)150 464 y(memory)g(stac)n(k,)h(ho)n
(w)g(the)g(ICs)g(are)f(alligned)h(on)n(b)r(oard)f(are)g(all)h(part)f
(of)h(the)h(organization)d(of)i(the)g(computer.)150 564
y(This)e(is)g(imp)r(ortan)n(t)g(as)g(data)g(transfer)f(sp)r(eeds,)i(p)r
(o)n(w)n(er)e(consumption,)i(and)f(system)g(functionalit)n(y)g(are)f
(all)h(af-)150 663 y(fected)f(b)n(y)f(the)h(organization.)275
863 y(Arc)n(hitecture)j(is)g(essen)n(tially)f(the)i(computer's)f
(instruction)g(set.)49 b(The)32 b(set)f(of)g(rules)g(that)h(de\014ne)g
(ho)n(w)f(the)150 962 y(pro)r(cessor)24 b(will)i(b)r(eha)n(v)n(e,)f
(whic)n(h)g(in)h(turn)g(necessitates)f(organizational)e(features.)36
b(The)26 b(arc)n(hitecture)e(ma)n(y)h(also)150 1062 y(include)g(the)g
(microarc)n(hitecture)d(of)i(the)h(pro)r(cessor,)e(or)g(ho)n(w)h(the)h
(pro)r(cessor)d(will)j(implemen)n(t)g(eac)n(h)e(instruction)150
1162 y(in)28 b(the)g(ISA)g(\(a)f(blac)n(k)g(b)r(o)n(x)g(to)h(users\).)p
0 TeXcolorgray 1929 5349 a(1)p 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fc(2)135 b(Endianness)150
265 y Fb(Endianness)35 b(is)g(the)h(concept)g(of)f(ordering)f(with)j
(resp)r(ect)e(to)g(bits)h(in)g(the)g(system)g(There)f(are)g(t)n(w)n(o)g
(t)n(yp)r(es)g(of)150 364 y(endianness)28 b(in)h(mo)r(dern)g
(computers,)f(big-endian)g(and)h(little-endian)g(In)g(a)f(big-endian)g
(system,)h(the)g(smallest)150 464 y(memory)38 b(address)h(stores)f(the)
h(most)g(signi\014can)n(t)g(b)n(yte)g(of)g(a)g(memory)g(w)n(ord)f
(Little-endian)h(systems)g(store)150 564 y(the)31 b(least)g
(signi\014can)n(t)f(b)n(yte)g(in)h(the)h(largest)d(memory)h(address.)45
b(In)n(tel's)31 b(x86)f(arc)n(hitecture)f(uses)i(little-endian)150
663 y(represen)n(tations.)h(Little-endian)20 b(systems)e(are)h(also)f
(common)h(with)h(micropro)r(cessors)c(due)j(to)g(In)n(tel's)h
(in\015uence.)150 763 y(Big-endian)30 b(systems)h(are)f(most)h
(commonly)g(found)g(in)g(computer)g(net)n(w)n(orking)f(applications.)46
b(There)31 b(is)g(also)150 863 y(another)i(t)n(yp)r(e)i(called)f(a)g
(mixed-endian)g(system.)58 b(A)34 b(mixed)h(system)f(will)h(ha)n(v)n(e)
e(a)h(di\013eren)n(t)h(endianness)f(for)150 962 y(16bit)26
b(w)n(ords)g(vs.)36 b(32)26 b(bit)h(w)n(ords.)36 b(Bi-endian)26
b(pro)r(cessors)e(can)j(op)r(erate)f(in)h(little-endian)g(or)f
(big-endian)g(mo)r(de.)p 0 TeXcolorgray 1929 5349 a(2)p
0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150 0 a 90 x Fc(3)135 b(Floating)46
b(p)t(oin)l(t)f(format)h(\(IEEE\))150 272 y Fb(Single)27
b(precision)g(format)g(is)h(kno)n(wn)f(as)f(binary32.)36
b(Binary32)25 b(consists)i(of:)p 0 TeXcolorgray 275 537
a Fa(\017)p 0 TeXcolorgray 41 w Fb(1)g(bit)h(sign)f(bit)p
0 TeXcolorgray 275 703 a Fa(\017)p 0 TeXcolorgray 41
w Fb(8)g(bit)h(exp)r(onen)n(t)f(bit)p 0 TeXcolorgray
275 869 a Fa(\017)p 0 TeXcolorgray 41 w Fb(24)f(bit)i(signi\014cand)f
(comp)r(onen)n(t)h(\(23)f(explicitly)g(stored\))275 1035
y(Double)g(precision)g(format)g(is)g(called)h(binary64:)p
0 TeXcolorgray 275 1318 a Fa(\017)p 0 TeXcolorgray 41
w Fb(1)f(bit)h(sign)f(bit)p 0 TeXcolorgray 275 1484 a
Fa(\017)p 0 TeXcolorgray 41 w Fb(11)f(bit)i(exp)r(onen)n(t)g(bit)p
0 TeXcolorgray 275 1650 a Fa(\017)p 0 TeXcolorgray 41
w Fb(24)e(53)h(signi\014cand)g(comp)r(onen)n(t)g(\(52)g(explicitly)h
(stored\))p 0 TeXcolorgray 1929 5349 a(3)p 0 TeXcolorgray
eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.4) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.4) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fc(4)135 b(Memory)45 b(heirarc)l(h)l(y)
150 265 y Fb(The)32 b(memory)g(heirarc)n(h)n(y)e(of)i(the)h(computer)f
(refers)f(to)i(the)f(arrangemen)n(t)e(of)j(the)f(memory)g(lo)r(cations)
f(of)i(the)150 364 y(system.)43 b(The)30 b(smallest)f(and)g(fastest)h
(memory)f(cac)n(he)f(is)i(the)g(L1)f(cac)n(he.)42 b(L1)29
b(is)h(further)g(split)g(in)n(to)f(t)n(w)n(o)g(lev)n(els)150
464 y(of)e(instruction)g(and)g(data)g(cac)n(he,)g(eac)n(h)f(128)g(KiB.)
h(The)g(instruction)g(cac)n(he)g(con)n(tains)f(a)h(blo)r(c)n(k)g(of)g
(op)r(co)r(de)g(that)150 564 y(has)g(b)r(een)g(fetc)n(hed)h(from)e
(memory)-7 b(.)36 b(By)27 b(temp)r(oral)g(lo)r(calit)n(y)f(it)i(can)f
(b)r(e)g(assumed)g(that)g(co)r(de)g(that)h(instructions)150
663 y(that)e(ha)n(v)n(e)f(b)r(een)i(executed)f(recen)n(tly)f(are)g
(more)h(lik)n(ely)f(to)h(b)r(e)h(used)f(again,)f(so)h(ha)n(ving)f
(rencen)n(t)g(instructions)h(in)150 763 y(the)f(L1)e(cac)n(he)h(allo)n
(ws)f(for)g(increased)g(lo)r(op)h(execution.)36 b(The)24
b(L1)g(data)g(cac)n(he)f(op)r(erates)g(on)h(the)h(same)e(principal,)150
863 y(only)k(it)h(stores)f(program)e(data)i(instead)h(of)f
(instructions.)37 b(The)27 b(L1)g(data)h(transfer)e(sp)r(eed)i(reac)n
(hes)e(700)g(GiB/s.)275 1062 y(The)h(next)h(cac)n(he)f(in)i(the)f
(heirarc)n(h)n(y)e(is)h(the)h(L2)g(cac)n(he.)37 b(The)27
b(L2)h(is)f(a)h(uni\014ed)g(data)g(and)f(instruction)h(cac)n(he)150
1162 y(1)g(MiB)g(in)h(size.)39 b(L2)27 b(is)i(a)f(slo)n(w)n(er)e(and)i
(farther)g(a)n(w)n(a)n(y)e(cac)n(he)i(than)g(L1,)g(b)r(est)h(access)e
(sp)r(eed)h(is)h(200)e(GiB/s.)38 b(The)150 1261 y(L2)27
b(cac)n(he)g(normally)f(feeds)i(data)f(in)n(to)g(the)h(L1)f(cac)n(he.)
275 1460 y(The)32 b(last)h(lev)n(el)f(found)h(in)h(generally)d(all)h
(systems)h(is)g(the)g(L3)f(cac)n(he.)52 b(This)33 b(is)f(the)i(largest)
d(cac)n(he)h(still)h(at)150 1560 y(6MiB.)i(L3)h(is)f(generally)g(a)g
(shared)g(cac)n(he)g(b)r(et)n(w)n(een)g(all)h(the)g(cores)e(of)i(the)g
(pro)r(cessor.)59 b(L1)36 b(and)f(L2)h(usually)150 1660
y(are)31 b(dedicated)h(to)g(eac)n(h)g(core)f(to)h(impro)n(v)n(e)f(p)r
(erformance.)49 b(While)33 b(L3)f(is)g(a)g(large)e(shared)i(space)f
(used)h(as)g(the)150 1759 y(big-brother)f(bac)n(kup)g(to)i(the)f
(smaller)g(L1)g(and)g(L2)f(cac)n(hes.)50 b(Access)32
b(sp)r(eed)h(of)f(the)h(L3)f(cac)n(he)f(is)h(around)f(100)150
1859 y(GB/s.)275 2058 y(Some)24 b(pro)r(cessors)f(ha)n(v)n(e)h(an)g(L4)
h(cac)n(he)f(that)h(is)g(the)g(largest)f(at)g(128)g(MiB,)h(and)g(acts)f
(as)g(just)i(one)e(more)h(lev)n(el)150 2158 y(of)j(cac)n(he)e(memory)-7
b(.)36 b(Bey)n(ond)27 b(this)h(is)f(only)h(main)f(memory)-7
b(.)275 2357 y(Flip)28 b(has)f(an)g(L1)g(instruction/data,)g(and)g(an)g
(L2)g(cac)n(he.)p 0 TeXcolorgray 1929 5349 a(4)p 0 TeXcolorgray
eop end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.5) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.5) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fc(5)135 b(SIMD)44 b(Instruction)h(Lev)l
(els)150 265 y Fb(Flip)28 b(supp)r(orts)f(the)h(follo)n(wing)f(SIMD)h
(instructions)f(:)p 0 TeXcolorgray 275 531 a Fa(\017)p
0 TeXcolorgray 41 w Fb(Streaming)f(SIMD)j(extensions)e(3)p
0 TeXcolorgray 275 697 a Fa(\017)p 0 TeXcolorgray 41
w Fb(Streaming)f(SIMD)j(extensions)e(4.1)p 0 TeXcolorgray
275 863 a Fa(\017)p 0 TeXcolorgray 41 w Fb(Streaming)f(SIMD)j
(extensions)e(4.2)p 0 TeXcolorgray 275 1029 a Fa(\017)p
0 TeXcolorgray 41 w Fb(Streaming)f(SIMD)j(extensions)e(4.1)p
0 TeXcolorgray 275 1195 a Fa(\017)p 0 TeXcolorgray 41
w Fb(Streaming)f(supplemen)n(tal)i(SIMD)g(extensions)f(3)p
0 TeXcolorgray 1929 5349 a(5)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
