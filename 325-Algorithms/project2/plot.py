#!/usr/bin/env python 
import matplotlib.pyplot as plt
import numpy as np

#coins for question 4
changedp = np.array([41, 42, 42, 41, 42, 42, 43, 43, 41, 42, 42, 43, 43, 42, 43, 43, 44, 44, 42, 43, 43, 44, 44, 43, 44, 44, 45, 45, 43, 44, 44, 45, 45, 44, 45, 45, 46, 46])
greedy = np.array([41, 42, 42, 41, 42, 42, 43, 43, 41, 42, 42, 43, 43, 42, 43, 43, 44, 44, 42, 43, 43, 44, 44, 43, 44, 44, 45, 45, 43, 44, 44, 45, 45, 44, 45, 45, 46, 46])
bruteforce = np.array([1, 2, 3, 4, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6, 3, 4, 5, 6, 7, 3, 4, 5, 6, 7])

#coins for question5
changedp2 = np.array([14, 17, 17, 16, 16, 15, 16, 18, 17, 17, 16, 17, 15, 18, 18, 17, 17, 16, 14, 17, 17, 16, 17, 16, 16, 18, 17, 17, 16, 17, 15, 18, 18, 17, 17, 16, 17, 19])
greedy2 = np.array([14, 17, 17, 16, 17, 16, 16, 19, 17, 17, 16, 17, 15, 18, 18, 17, 18, 17, 14, 17, 17, 16, 17, 16, 16, 19, 17, 17, 16, 17, 15, 18, 18, 17, 18, 17, 17, 20])
bruteforce2 = np.array([1, 1, 2, 2, 3, 1, 2, 2, 3, 3, 4, 1, 1, 2, 2, 3, 3, 2, 2, 3, 3, 4, 4, 1, 2, 2, 3, 3, 4]) 

#coins for question 5

changedp3 = np.array([334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 337, 338, 337, 338, 337, 338, 337, 338, 337, 338, 337, 338, 337, 338, 337, 338, 337, 338])
greedy3 = np.array([334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 334, 335, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 335, 336, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 336, 337, 337, 338, 337, 338, 337, 338, 337, 338, 337, 338, 337, 338, 337, 338, 337, 338, 337, 338]) 
bruteforce3 = np.array([1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2])


changedp_time = np.array([94.3100452423,
87.5689983368,
84.8708152771,
98.6530780792,
79.8759460449,
84.7699642181,
97.34582901,
92.3399925232,
80.0969600677,
82.9389095306,
88.7379646301,
83.4889411926,
76.6611099243,
82.6191902161,
87.4869823456,
94.1560268402,
97.0890522003,
82.5049877167,
84.1398239136,
85.1919651031,
106.480836868,
87.3031616211,
95.253944397,
82.9801559448,
93.6179161072,
93.5320854187,
97.5348949432,
84.8910808563,
94.2070484161,
86.7049694061,
89.9839401245,
94.2778587341,
95.8590507507,
86.2300395966,
86.3909721375,
92.6628112793,
80.2891254425,
83.6699008942,
89.7541046143,
78.0708789825,
88.1910324097,
93.6460494995,
77.4130821228,
80.4810523987,
88.28997612,
82.2489261627,
83.4381580353,
93.2350158691,
94.3899154663,
83.1029415131,
86.0750675201,
91.2220478058,
84.4919681549,
94.290971756,
87.9430770874,
90.411901474,
101.170063019,
102.19502449,
96.027135849,
96.5929031372,
80.0611972809,
84.6219062805,
117.545843124,
90.4741287231,
107.130050659,
92.0310020447,
100.607156754,
108.243942261,
92.188835144,
86.7688655853,
87.5840187073,
82.2098255157,
88.8879299164,
87.0480537415,
78.0429840088,
80.169916153,
83.4748744965,
96.7891216278,
89.8938179016,
84.9330425262,
85.2248668671,
77.8169631958,
86.7111682892,
77.5780677795,
79.9601078033,
94.409942627,
80.591917038,
89.9798870087,
88.9689922333,
88.0949497223,
84.557056427,
94.9928760529,
86.9839191437,
95.5910682678,
83.7349891663,
82.9250812531,
97.8450775146,
83.1050872803,
83.0979347229,
89.4260406494])
greedy_time = np.array([0.0669956207275 , 
0.0629425048828 , 
0.06103515625 , 
0.06103515625 , 
0.0600814819336 , 
0.0600814819336 , 
0.0598430633545 , 
0.06103515625 , 
0.0598430633545 , 
0.06103515625 , 
0.0598430633545 , 
0.0629425048828 , 
0.06103515625 , 
0.0598430633545 , 
0.0600814819336 , 
0.0598430633545 , 
0.0600814819336 , 
0.06103515625 , 
0.0600814819336 , 
0.06103515625 , 
0.0600814819336 , 
0.0598430633545 , 
0.06103515625 , 
0.0600814819336 , 
0.06103515625 , 
0.0600814819336 , 
0.06103515625 , 
0.0600814819336 , 
0.06103515625 , 
0.0600814819336 , 
0.0607967376709 , 
0.06103515625 , 
0.0598430633545 , 
0.06103515625 , 
0.0598430633545 , 
0.06103515625 , 
0.0607967376709 , 
0.0600814819336 , 
0.0607967376709 , 
0.0600814819336 , 
0.0600814819336 , 
0.0600814819336 , 
0.06103515625 , 
0.0600814819336 , 
0.06103515625 , 
0.0600814819336 , 
0.0600814819336 , 
0.0600814819336 , 
0.0600814819336 , 
0.06103515625 , 
0.0600814819336 , 
0.06103515625 , 
0.0660419464111 , 
0.0619888305664 , 
0.06103515625 , 
0.0600814819336 , 
0.06103515625 , 
0.06103515625 , 
0.06103515625 , 
0.06103515625 , 
0.0600814819336 , 
0.0598430633545 , 
0.06103515625 , 
0.0619888305664 , 
0.0607967376709 , 
0.06103515625 , 
0.0600814819336 , 
0.06103515625 , 
0.0600814819336 , 
0.06103515625 , 
0.06103515625 , 
0.06103515625 , 
0.0600814819336 , 
0.0598430633545 , 
0.06103515625 , 
0.0598430633545 , 
0.06103515625 , 
0.0598430633545 , 
0.06103515625 , 
0.06103515625 , 
0.06103515625 , 
0.0598430633545 , 
0.06103515625 , 
0.06103515625 , 
0.06103515625 , 
0.0600814819336 , 
0.0607967376709 , 
0.06103515625 , 
0.06103515625 , 
0.06103515625 , 
0.06103515625 , 
0.06103515625 , 
0.06103515625 , 
0.0598430633545 , 
0.06103515625 , 
0.0607967376709 , 
0.0600814819336 , 
0.06103515625 , 
0.06103515625])
brute_time = np.array([0.00905990600586 , 
0.00786781311035 , 
0.0219345092773 , 
0.0109672546387 , 
0.0200271606445 , 
0.0810623168945 , 
0.150918960571 , 
0.137805938721 , 
0.354051589966 , 
0.646114349365 , 
1.35397911072 , 
1.88302993774 , 
2.43210792542 , 
5.01799583435 , 
13.3340358734 , 
15.9170627594 , 
25.0029563904 , 
46.5631484985 , 
104.861974716 , 
155.133008957 , 
273.555994034 , 
479.661941528 , 
921.288013458 , 
1636.02399826 , 
2921.31614685 , 
5325.2518177 , 
9579.77604866 , 
17198.4171867 , 
30816.9019222])  

greedy_time2 = np.array([0.0510215759277 , 
0.03981590271 , 
0.0338554382324 , 
0.0300407409668 , 
0.0269412994385 , 
0.0269412994385 , 
0.0250339508057 , 
0.0240802764893 , 
0.0219345092773])

dynamic_time2 = np.array([36.0858440399,
37.7650260925,
38.8369560242,
41.335105896,
45.7639694214,
45.4361438751,
50.1880645752,
88.9699459076,
83.5599899292])

brute_time2 = np.array([0.00596046447754 , 
0.00286102294922 , 
0.00309944152832 , 
0.00190734863281 , 
0.00190734863281 , 
0.00190734863281 , 
0.00214576721191 , 
0.00214576721191 , 
0.00190734863281]) 
#2_ticks = ['1', '10', '25', '50', '100', '250', '500', '1000', '2500', '5000']
'''
#problem 3
plt.figure(1)
plt.plot(changedp, '-r')
plt.title("ChangeFast: American coins")
plt.ylabel("min number of coins")
plt.xlabel("Queried value (N) Range:  2010 - 2200")
plt.xticks(range(40), [], color='black')

plt.figure(2)
plt.plot(greedy, '-g')
plt.title("Greedy 1: American coins")
plt.ylabel("min number of coins")
plt.xlabel("Queried value (N) Range: 2010 - 2200")
plt.xticks(range(40), [], color='black')

plt.figure(3)
plt.plot(bruteforce, '-b')
plt.title("ChnageSlow: American coins")
plt.ylabel("min number of coins")
plt.xlabel("Queried value (N) Range: 1 - 35")
plt.xticks(range(35), [], color='black')

#problem 4
plt.figure(5)
plt.plot(changedp2, '-r')
plt.title("ChangeFast: [1, 2, 6, 12, 24, 48, 60], [1, 6, 13, 37, 150]")
plt.ylabel("min number of coins")
plt.xlabel("Queried value (N) Range 10000 - 10100")
plt.xticks(range(50), [], color='black')

plt.figure(6)
plt.plot(greedy2, '-g')
plt.title("Greedy 1: [1, 2, 6, 12, 24, 48, 60], [1, 6, 13, 37, 150]")
plt.ylabel("min number of coins")
plt.xlabel("Queried value (N) Range 10000 - 10100")
plt.xticks(range(50), [], color='black')

plt.figure(7)
plt.plot(bruteforce2, '-b')
plt.title("ChangeSlow: [1, 2, 6, 12, 24, 48, 60], [1, 6, 13, 37, 150]")
plt.ylabel("min number of coins")
plt.xlabel("Queried value (N), Range = 1 - 35")
plt.xticks(range(35), [], color='black')


plt.figure(8)
plt.plot(changedp3, '-r')
plt.title("ChangeFast: [1, 2, 4, 6, 8, 10, 12, ..., 30]")
plt.ylabel("min number of coins")
plt.xlabel("Queried value (N) Range 2010 - 2200")
plt.xticks(range(100), [], color='black')

plt.figure(9)
plt.plot(greedy3, '-g')
plt.title("Greedy 1: [1, 2, 4, 6, 8, 10, 12, ..., 30]")
plt.ylabel("min number of coins")
plt.xlabel("Queried value (N) Range 2010 - 2200")
plt.xticks(range(100), [], color='black')

plt.figure(10)
plt.plot(bruteforce3, '-b')
plt.title("ChangeSlow: [1, 2, 4, 6, 8, 10, 12, ..., 30]")
plt.ylabel("min number of coins")
plt.xlabel("Queried value (N) Range: 1 - 35")
plt.xticks(range(35), [], color='black')

plt.figure(11)
plt.plot(greedy2, '-b') 
plt.plot(changedp2, '-g')
plt.title("ChangedFast and Greedy log log plot")
plt.ylabel(" min number of coins")
plt.xlabel("Querued Value(N) Range: 2010 - 2200")
plt.yscale('log')
plt.xticks(range(50), [], color='black')

plt.figure(12)
plt.plot(bruteforce, '-b')
plt.title("ChangeSlow log log plot")
plt.ylabel(" min number of coins")
plt.xlabel("Querued Value(N) Range: 1 - 35")
plt.yscale('log')
plt.xticks(range(35), [], color='black')
'''
'''
plt.plot(changedp_time, '-g')
plt.plot(brute_time, '-r')
plt.plot(greedy_time, '-b')
plt.title("Log Execution Times")
plt.ylabel("time: ms")
plt.xlabel("Queried value (N) Range:  10000 - 10100")
plt.xticks(range(50), [], color='black')
plt.yscale('log')
'''
plt.plot(dynamic_time2, '-g')
plt.plot(brute_time2, '-r')
plt.plot(greedy_time2, '-b')
plt.title("Times v Number of Denominations")
plt.ylabel("time: ms")
plt.xlabel("Number of types of coins")


plt.margins(.2)
plt.tight_layout()
plt.show()
